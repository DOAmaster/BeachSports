62aa5c875d4f1ca465e587db5d77c410|LS1sb2NhbCBwYXJ0ID0gUldPYmplY3Q6TmV3KCJQYXJ0IixXb3JrU3BhY2UpDQotLXBhcnQuUG9zaXRpb24gPSBzY3JpcHQuUGFyZW50LlBvc2l0aW9uDQpsb2NhbCBoYXNTcGF3bmVkID0gdHJ1ZQ0KbG9jYWwgZGlyID0gVmVjdG9yMig1LDYpDQpsb2NhbCBzcGF3bmVyUGFydCA9IHNjcmlwdC5QYXJlbnQNCmxvY2FsIG1lc2hQYXJ0ID0gUldPYmplY3Q6TmV3KCJNZXNoUGFydCIsV29ya1NwYWNlKQ0KbWVzaFBhcnQuTWVzaElkID0gIlQxaFJkVEJ5YlQxUkN4ZkVySyINCm1lc2hQYXJ0LlRleHR1cmVJZCA9ICJUMTlhZFRCeWJUMVJDeGZFcksiDQotLW1lc2hQYXJ0LlNpemUgPSBWZWN0b3IzKC40LC40LC40KQ0KbWVzaFBhcnQuUG9zaXRpb24gPSBWZWN0b3IzKDAsLTEsLTEpDQotLW1lc2hQYXJ0LlBvc2l0aW9uID0gVmVjdG9yMygzLDMsMykNCi0tbWVzaFBhcnQuR3Jhdml0eSA9IGZhbHNlDQotLW1lc2hQYXJ0LkNhbkNvbGxpZGUgPSBmYWxzZQ0KbWVzaFBhcnQuQW5jaG9yZWQgPSB0cnVlDQoNCmxvY2FsIEJhbGxTcGF3blBPUyA9IFdvcmtTcGFjZVtCYWxsU3Bhd25QT1NdDQoNCmxvY2FsIG15V29ya1NwYWNlID0gR2V0U2VydmljZSgiV29ya1NwYWNlIikNCmxvY2FsIGRlYnVnSUQgPSAiZGVidWciDQoNCi0tW1sNCndhaXQoMSkNCmxvY2FsIG15QmFsbCA9IFNlcnZlclN0b3JhZ2VbIlNvY2NlckJhbGxUb29sIl0NCmxvY2FsIHRlbXAxID0gbXlCYWxsOkNsb25lKFdvcmtTcGFjZSktLSBjcmVhdGUgYSBjb3B5IG9mIHBhcnQNCndhaXQoMSkNCnRlbXAxLkhvb2tQYXJ0ID0gVmVjdG9yMy5OZXcoMiwyLDIpLS0gY3JlYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgY29weSBvYmplY3QnDQp0ZW1wMS5HcmF2aXR5ID0gdHJ1ZQ0KdGVtcDEuQ2FuQ29sbGlkZSA9IHRydWUNCnRlbXAxLlBhcmVudCA9IFdvcmtTcGFjZSAtLSBzZXQgdGhlIHBhcmVudCBvZiBjb3B5IG9iamVjdCBhcyB3b3JrIHNwYWNlDQotLV1dDQoNCnNwYXduZXJQYXJ0LlRyaWdnZXJFbnRlcjpDb25uZWN0KGZ1bmN0aW9uKGF2cikgLS0gcmVnaXN0ZXIgaGl0IGV2ZW50DQogICAgICAgIGlmIGF2cjpJc0NsYXNzKCJBdmF0YXIiKSBhbmQgaGFzU3Bhd25lZCB0aGVuDQoJCQlsb2NhbCBiYWxsRm91bmQgPSBmYWxzZQ0KCQkJaGFzU3Bhd25lZCA9IGZhbHNlDQoJCQlwcmludCgiU2VhcmNoaW5nIGZvciBvd25lZCBGb290YmFsbCIpDQoJCQktLWxvY2FsIHdvcmtTcGFjZSA9IEdldFNlcnZpY2UoIldvcmtTcGFjZSIpDQoJCQktLWxvY2FsIHRlbXAgPSBSV09iamVjdDpOZXcoIk1lc2hQYXJ0IiktLSBjcmVhdGUgYW4gZXhhbXBsZSBvYmplY3Qgb2YgcGFydA0KCQkJLS10ZW1wLk1lc2hJZCA9ICJyd2lkOi8vVDFoUmRUQnliVDFSQ3hmRXJLIg0KCQkJLS10ZW1wLlRleHR1cmVJZCA9ICJyd2lkOi8vVDE5YWRUQnliVDFSQ3hmRXJLIg0KCQkJLS10ZW1wLlBvc2l0aW9uID0gVmVjdG9yMy5OZXcoMiwyLDIpLS0gc2V0IHRoZSBwb3NpdGlvbiBvZiB0aGUgcGFydA0KCQkJLS10ZW1wLlBhcmVudCA9IHdvcmtTcGFjZSAtLSBzZXQgdGhlIHBhcmVudCBvZiBjcmVhdGVkIG9iamVjdCBhcyB3b3JrIHNwYWNlDQoJCQktLWNoZWNrIGlmIHBsYXllciBoYXMgU29jY2VyQmFsbFRvb2wgaW4gaGFuZA0KCQkJbG9jYWwgaGFzVG9vbCA9IGF2cjpHZXRDaGlsZEJ5TmFtZSgiU29jY2VyQmFsbFRvb2xOZXciKQ0KCQkJaWYgaGFzVG9vbCB+PSBuaWwgdGhlbg0KCQkJCS0tcHJpbnQoImhhcyB0b29sIGluIGhhZCIpDQoJCQkJYmFsbEZvdW5kID0gdHJ1ZQ0KCQkJZW5kDQoJCQkNCgkJCS0tbG9jYWwgdGVtcDEgPSBteVdvcmtTcGFjZTpHZXRDaGlsZEJ5TmFtZSgiU29jY2VyQmFsbFRvb2wiLCB0cnVlKQ0KCQkJZm9yIF8sQ2hpbGQgaW4gcGFpcnMobXlXb3JrU3BhY2U6R2V0QWxsQ2hpbGQoKSkgZG8gLS1pdGVyYXRlIGFsbCBjaGlsZCBvYmplY3RzIG9mIHRlbXAyIGJ5IHBhcmlzDQoJCQkJLS1DaGlsZC5Db2xvciA9IFZlY3RvcjMuTmV3KDI1NSwwLDApLS1zZXQgdGhlIGNvbG9yIG9mIGNoaWxkIG9iamVjdHMgdG8gcmVkDQoJCQkJLS1DaGVja3MgaWYgcGxheWVyIGhhcyBhIGZseWluZ0JhbGwgaW4gdGhlIGFpciB0aGF0IHRoZXkgb3duIHRoZW4gdGVsZXBvcnQgaXQgYmFjaw0KCQkJCWlmIENoaWxkLk5hbWUgPT0gIkZseWluZ0JhbGwiIHRoZW4NCgkJCQkJLS1jaGVjayB0aGUgb3duZXJJRCBhbmQgY29tcGFyZSBpdCB0byB0aGUgcGxheWVyIGlkDQoJCQkJCWlmIENoaWxkLmZseWluZ0lELlZhbHVlID09IGF2ci5QbGF5ZXJJZCB0aGVuDQoJCQkJCQktLXByaW50KCJGb3VuZCBwbGF5ZXIgb3duZWQgZmx5aW5nIGJhbGwiKQ0KCQkJCQkJbG9jYWwgdGVtcFBPUyA9IHNjcmlwdC5QYXJlbnQuUG9zaXRpb24gKyBWZWN0b3IzKDAsMCwxKQ0KCQkJCQkJLS1DaGlsZC5BbmNob3JlZCA9IHRydWUNCgkJCQkJCUNoaWxkLlBvc2l0aW9uID0gdGVtcFBPUw0KCQkJCQkJQ2hpbGQuQW5jaG9yZWQgPSBmYWxzZQ0KCQkJCQkJLS1wcmludCgiRmx5aW5nQmFsbCByZXBvc2l0aW9uZWQiKQ0KCQkJCQkJLS10ZWxlcG9ydCBiYWxsIHRvIGN1cnJlbnQgYmFsbFBPUw0KCQkJCQkJYmFsbEZvdW5kID0gdHJ1ZQ0KCQkJCQllbmQNCgkJCQllbmQNCgkJCQkNCgkJCQktLWZvdW5kIGEgcGxheWVyIG93bmVkIGJhbGwsIHRoZW4gdGVsZXBvcnRzIGl0IGJhY2sgdG8gZ29hbFBPUw0KCQkJCWlmIENoaWxkLk5hbWUgPT0gIlNvY2NlckJhbGxUb29sTmV3IiBhbmQgQ2hpbGQuTGFzdFRocm93bkJ5SUQuVmFsdWUgfj0gIm1hcCIgdGhlbg0KCQkJCQktLWNoZWNrIHRoZSBvd25lcklEIGFuZCBjb21wYXJlIGl0IHRvIHRoZSBwbGF5ZXIgaWQNCgkJCQkJaWYgQ2hpbGQuTGFzdFRocm93bkJ5SUQuVmFsdWUgPT0gYXZyLlBsYXllcklkIHRoZW4NCgkJCQkJCS0tcHJpbnQoIkZvdW5kIHBsYXllciBvd25lZCBiYWxsIikNCgkJCQkJCS0tcHJpbnQoQ2hpbGQuT3duZXJJRC5WYWx1ZSkNCgkJCQkJCWxvY2FsIHRlbXBQT1MgPSBzY3JpcHQuUGFyZW50LlBvc2l0aW9uICsgVmVjdG9yMygwLDAsMSkNCgkJCQkJCS0tQ2hpbGQuQW5jaG9yZWQgPSB0cnVlDQoJCQkJCQlDaGlsZC5Ib29rLlBvc2l0aW9uID0gdGVtcFBPUw0KCQkJCQkJQ2hpbGQuQW5jaG9yZWQgPSBmYWxzZQ0KCQkJCQkJLS1wcmludCgiQmFsbCByZXBvc2l0aW9uZWQiKQ0KCQkJCQkJLS10ZWxlcG9ydCBiYWxsIHRvIGN1cnJlbnQgYmFsbFBPUw0KCQkJCQkJYmFsbEZvdW5kID0gdHJ1ZQ0KCQkJCQllbmQNCgkJCQllbmQNCgkJCWVuZA0KCQkJDQoJCQktLUJhbGwgd2FzIG5vdCBmb3VuZCwgdGhlbiByZXNwYXduIGEgbmV3IGJhbGwgd2l0aCB0aGUgcGxheWVyIElEIGF0dGFjaGVkDQoJCQlpZiBiYWxsRm91bmQgfj0gdHJ1ZSB0aGVuDQoJCQkJLS1wcmludCgibm8gYmFsbCBmb3VuZCBzcGF3bmluZyBuZXcgYmFsbCIpDQoJCQkJLS1wcmludCgiU3Bhd25pbmcgRm9vdGJhbGwiKQ0KCQkJCS0tQ2xvbmUgbG9jYXRpb24gaXMgYmFzZWQgb2ZmIHBhcmVudGVkIHBhcnQNCgkJCQl3YWl0KDEpDQoJCQkJbG9jYWwgbXlCYWxsID0gU2VydmVyU3RvcmFnZVsiU29jY2VyQmFsbFRvb2xOZXciXQ0KCQkJCWxvY2FsIHRlbXBQT1MgPSBzY3JpcHQuUGFyZW50LlBvc2l0aW9uICsgVmVjdG9yMygwLDAsMSkNCgkJCQlsb2NhbCB0ZW1wQmFsbFBPUyA9IHRlbXBQT1MNCgkJCQktLW15QmFsbC5Qb3NpdGlvbiA9IHRlbXBCYWxsUE9TDQoJCQkJbG9jYWwgdGVtcDEgPSBteUJhbGw6Q2xvbmUoV29ya1NwYWNlKS0tIGNyZWF0ZSBhIGNvcHkgb2YgcGFydA0KCQkJCXdhaXQoMSkNCgkJCQktLUFzc2lnbiBwbGF5ZXJzSUQgd2hvIHNwYXduZWQgYmFsbCB0byB0b29scyBPd25lcklEDQoJCQkJdGVtcDEuTGFzdFRocm93bkJ5SUQuVmFsdWUgPSBhdnIuUGxheWVySWQNCgkJCQkNCgkJCQl0ZW1wMS5Ib29rLlBvc2l0aW9uID0gdGVtcEJhbGxQT1MNCgkJCQkNCgkJCQktLXRlbXAxLkhvb2tQYXJ0ID0gVmVjdG9yMy5OZXcoNSwyLDUpLS0gY3JlYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgY29weSBvYmplY3QnDQoJCQkJdGVtcDEuR3Jhdml0eSA9IHRydWUNCgkJCQl0ZW1wMS5DYW5Db2xsaWRlID0gdHJ1ZQ0KCQkJCXRlbXAxLlBhcmVudCA9IFdvcmtTcGFjZSAtLSBzZXQgdGhlIHBhcmVudCBvZiBjb3B5IG9iamVjdCBhcyB3b3JrIHNwYWNlDQoJCQkJLS13YWl0KDIpDQoJCQkJYmFsbEZvdW5kID0gdHJ1ZQ0KCQkJZW5kDQoJCQktLUNsb25lIGxvY2F0aW9uIGlzIGJhc2VkIG9mZiBwYXJlbnRlZCBwYXJ0DQoJCQktLXdhaXQoMSkNCgkJCS0tbG9jYWwgbXlCYWxsID0gU2VydmVyU3RvcmFnZVsiU29jY2VyQmFsbFRvb2wiXQ0KCQkJLS1sb2NhbCB0ZW1wQmFsbFBPUyA9IHNjcmlwdC5QYXJlbnQuUG9zaXRpb24gKyBWZWN0b3IzKDAsMCwxKQ0KCQkJLS1wcmludCh0ZW1wQmFsbFBPUykNCgkJCS0tbXlCYWxsLlBvc2l0aW9uID0gdGVtcEJhbGxQT1MNCgkJCS0tbG9jYWwgdGVtcDEgPSBteUJhbGw6Q2xvbmUoV29ya1NwYWNlKS0tIGNyZWF0ZSBhIGNvcHkgb2YgcGFydA0KCQkJLS13YWl0KDEpDQoJCQktLUFzc2lnbiBwbGF5ZXJzSUQgd2hvIHNwYXduZWQgYmFsbCB0byB0b29scyBPd25lcklEDQoJCQktLXRlbXAxLk93bmVySUQuVmFsdWUgPSBhdnIuUGxheWVySWQNCgkJCQ0KCQkJLS1ERUJVR0cgY2hhbmdlIG5hbWUgb2YgaWQgdG8gZmFsc2Ugb25lDQoJCQktLXRlbXAxLk93bmVySUQuVmFsdWUgPSBkZWJ1Z0lEDQoJCQkNCgkJCS0tdGVtcDEuSG9vay5Qb3NpdGlvbiA9IHRlbXBCYWxsUE9TDQoJCQkNCgkJCS0tdGVtcDEuSG9va1BhcnQgPSBWZWN0b3IzLk5ldyg1LDIsNSktLSBjcmVhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBjb3B5IG9iamVjdCcNCgkJCS0tdGVtcDEuR3Jhdml0eSA9IHRydWUNCgkJCS0tdGVtcDEuQ2FuQ29sbGlkZSA9IHRydWUNCgkJCS0tdGVtcDEuUGFyZW50ID0gV29ya1NwYWNlIC0tIHNldCB0aGUgcGFyZW50IG9mIGNvcHkgb2JqZWN0IGFzIHdvcmsgc3BhY2UNCgkJCQ0KCQkJDQoJCQkNCgkJCXdhaXQoOSkNCgkJCWhhc1NwYXduZWQgPSB0cnVlDQoJCQktLXdhaXQoMikNCgkJCS0tbG9jYWwgdGVtcDEgPSB0ZW1wOkNsb25lKCktLSBjcmVhdGUgYSBjb3B5IG9mIHBhcnQNCgkJCS0tdGVtcDEuUG9zaXRpb24gPSBWZWN0b3IzLk5ldygzLDMsMyktLSBjcmVhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBjb3B5IG9iamVjdA0KCQkJLS10ZW1wMS5QYXJlbnQgPSB3b3JrU3BhY2UgLS0gc2V0IHRoZSBwYXJlbnQgb2YgY29weSBvYmplY3QgYXMgd29yayBzcGFjZQ0KICAgICAgICBlbmQNCiAgICBlbmQp
68a8e813181f01f22a0cbfce7f58038b|LS1sb2NhbCBwYXJ0ID0gUldPYmplY3Q6TmV3KCJQYXJ0IixXb3JrU3BhY2UpDQotLXBhcnQuUG9zaXRpb24gPSBzY3JpcHQuUGFyZW50LlBvc2l0aW9uDQpsb2NhbCBoYXNTcGF3bmVkID0gdHJ1ZQ0KbG9jYWwgZGlyID0gVmVjdG9yMig1LDYpDQpsb2NhbCBzcGF3bmVyUGFydCA9IHNjcmlwdC5QYXJlbnQNCg0KbG9jYWwgQmFsbFNwYXduUE9TID0gV29ya1NwYWNlW0JhbGxTcGF3blBPU10NCg0KLS1bWw0Kd2FpdCgxKQ0KbG9jYWwgbXlCYWxsID0gU2VydmVyU3RvcmFnZVsiU29jY2VyQmFsbFRvb2wiXQ0KbG9jYWwgdGVtcDEgPSBteUJhbGw6Q2xvbmUoV29ya1NwYWNlKS0tIGNyZWF0ZSBhIGNvcHkgb2YgcGFydA0Kd2FpdCgxKQ0KdGVtcDEuSG9va1BhcnQgPSBWZWN0b3IzLk5ldygyLDIsMiktLSBjcmVhdGUgdGhlIHBvc2l0aW9uIG9mIHRoZSBjb3B5IG9iamVjdCcNCnRlbXAxLkdyYXZpdHkgPSB0cnVlDQp0ZW1wMS5DYW5Db2xsaWRlID0gdHJ1ZQ0KdGVtcDEuUGFyZW50ID0gV29ya1NwYWNlIC0tIHNldCB0aGUgcGFyZW50IG9mIGNvcHkgb2JqZWN0IGFzIHdvcmsgc3BhY2UNCi0tXV0NCg0Kc3Bhd25lclBhcnQuVHJpZ2dlckVudGVyOkNvbm5lY3QoZnVuY3Rpb24oYXZyKSAtLSByZWdpc3RlciBoaXQgZXZlbnQNCiAgICAgICAgaWYgYXZyOklzQ2xhc3MoIkhvb2siKSB0aGVuDQoJCQlwcmludCgiR2FyYmFnZSBDb2xsZWN0aW5nIFNvY2NlckJhbGxUb29sIikNCgkJCS0tbG9jYWwgd29ya1NwYWNlID0gR2V0U2VydmljZSgiV29ya1NwYWNlIikNCgkJCS0tbG9jYWwgdGVtcCA9IFJXT2JqZWN0Ok5ldygiTWVzaFBhcnQiKS0tIGNyZWF0ZSBhbiBleGFtcGxlIG9iamVjdCBvZiBwYXJ0DQoJCQktLXRlbXAuTWVzaElkID0gInJ3aWQ6Ly9UMWhSZFRCeWJUMVJDeGZFcksiDQoJCQktLXRlbXAuVGV4dHVyZUlkID0gInJ3aWQ6Ly9UMTlhZFRCeWJUMVJDeGZFcksiDQoJCQktLXRlbXAuUG9zaXRpb24gPSBWZWN0b3IzLk5ldygyLDIsMiktLSBzZXQgdGhlIHBvc2l0aW9uIG9mIHRoZSBwYXJ0DQoJCQktLXRlbXAuUGFyZW50ID0gd29ya1NwYWNlIC0tIHNldCB0aGUgcGFyZW50IG9mIGNyZWF0ZWQgb2JqZWN0IGFzIHdvcmsgc3BhY2UNCgkJCQ0KCQkJLS1DbG9uZSBsb2NhdGlvbiBpcyBiYXNlZCBvZmYgcGFyZW50ZWQgcGFydA0KCQkJd2FpdCgxKQ0KCQkJYXZyOkRlc3Ryb3koKQ0KCQkJLS13YWl0KDIpDQoJCQktLWxvY2FsIHRlbXAxID0gdGVtcDpDbG9uZSgpLS0gY3JlYXRlIGEgY29weSBvZiBwYXJ0DQoJCQktLXRlbXAxLlBvc2l0aW9uID0gVmVjdG9yMy5OZXcoMywzLDMpLS0gY3JlYXRlIHRoZSBwb3NpdGlvbiBvZiB0aGUgY29weSBvYmplY3QNCgkJCS0tdGVtcDEuUGFyZW50ID0gd29ya1NwYWNlIC0tIHNldCB0aGUgcGFyZW50IG9mIGNvcHkgb2JqZWN0IGFzIHdvcmsgc3BhY2UNCiAgICAgICAgZW5kDQogICAgZW5kKQ==
e285ee09d684cd57a15e096eea21e64f|bG9jYWwgQ3VyR3JlbmFkZVN5c3RlbUZvbG9yID0gc2NyaXB0LlBhcmVudA0KbG9jYWwgdG9vbCA9IHNjcmlwdC5QYXJlbnQuUGFyZW50DQpsb2NhbCBHcmVuYWRlU3lzdGVtRm9sZGVyID0gQ29tbW9uU3RvcmFnZTpHZXRDaGlsZEJ5TmFtZSgiR3JlbmFkZVN5c3RlbSIpDQoNCi0t5aaC5p6c5p6q57O757uf5rKh5pyJ5ou36LSd6L+H77yM5ou36LSd5Yiw6YCa55So5a2Y5YKoDQppZiBHcmVuYWRlU3lzdGVtRm9sZGVyID09IG5pbCB0aGVuDQoJR3JlbmFkZVN5c3RlbUZvbGRlciA9IEN1ckdyZW5hZGVTeXN0ZW1Gb2xvcjpDbG9uZSgpDQoJR3JlbmFkZVN5c3RlbUZvbGRlci5QYXJlbnQgPSBDb21tb25TdG9yYWdlDQplbmQNCg0KLS3lpoLmnpzmnI3liqHlmajpgLvovpHph4zpnaLmsqHmnInmnI3liqHlmajohJrmnKzlsIbohJrmnKzmi7fotJ3liLDmnI3liqHlmajpgLvovpHlubbmiafooYzpgLvovpENCmlmIFNlcnZlckxvZ2ljOkdldENoaWxkQnlOYW1lKCJTZXJ2ZXJHcmVuYWRlU2NyaXB0IikgPT0gbmlsIHRoZW4NCglzY3JpcHQuUGFyZW50ID0gU2VydmVyTG9naWMNCglsb2NhbCBHcmVuYWRlU3lzdGVtID0gUldyZXF1aXJlKEdyZW5hZGVTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJHcmVuYWRlU3lzdGVtIikpDQoJaWYgbm90IEdyZW5hZGVTeXN0ZW0uSXNSdW5uaW5nIGFuZCBub3QgR3JlbmFkZVN5c3RlbS5Jc1NldHVwIHRoZW4NCgkJR3JlbmFkZVN5c3RlbS5TZXR1cCgpDQoJZW5kDQoJDQoJLS3lrqLmiLfnq6/mi7fotJ3ohJrmnKwNCglsb2NhbCBmdW5jdGlvbiBTZXR1cENsaWVudEdyZW5hZGVTY3JpcHQocGxheWVyKQ0KCQlsb2NhbCBjbGllbnRHcmVuYWRlU2NyaXB0ID0gcGxheWVyLlBsYXllclNjcmlwdHM6R2V0Q2hpbGRCeU5hbWUoIkNsaWVudEdyZW5hZGVTY3JpcHQiKQ0KCQlpZiBjbGllbnRHcmVuYWRlU2NyaXB0ID09IG5pbCB0aGVuDQoJCQljbGllbnRHcmVuYWRlU2NyaXB0ID0gR3JlbmFkZVN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkNsaWVudEdyZW5hZGVTY3JpcHQiKTpDbG9uZSgpDQoJCQljbGllbnRHcmVuYWRlU2NyaXB0LlBhcmVudCA9IHBsYXllci5QbGF5ZXJTY3JpcHRzDQoJCWVuZA0KCWVuZA0KCQ0KCVBsYXllcnMuUGxheWVyQWRkZWQ6Q29ubmVjdChmdW5jdGlvbihwbGF5ZXJpZCkNCgkJbG9jYWwgcGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChwbGF5ZXJpZCkJDQoJCVNldHVwQ2xpZW50R3JlbmFkZVNjcmlwdChwbGF5ZXIpDQoJZW5kKQ0KDQogICAgZm9yIF8sIHBsYXllciBpbiBwYWlycyhQbGF5ZXJzOkdldEFsbFBsYXllcnMoKSkgZG8NCgkJU2V0dXBDbGllbnRHcmVuYWRlU2NyaXB0KHBsYXllcikNCgllbmQNCmVuZA0KLS3mt7vliqDlkozliKDpmaTmnqrnmoTml7blgJnnu5lHdW5TeXN0ZW3lj5HpgIHkuovku7YNCkdyZW5hZGVTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJHcmVuYWRlQWRkIik6RmlyZUxvY2FsU2VydmVyKHRvb2wpDQp0b29sLkRlc3Ryb3llZDpDb25uZWN0KGZ1bmN0aW9uKCkgDQoJR3JlbmFkZVN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkdyZW5hZGVSZW1vdmUiKTpGaXJlTG9jYWxTZXJ2ZXIodG9vbCkNCmVuZCkNCg0KDQotLeWcqOaequS4i+mdoueahOatpuWZqOezu+e7n+ebtOaOpeWIoOmZpOi+g+WwkeWQjOatpeaVsOaNrumHjw0KaWYgQ3VyR3JlbmFkZVN5c3RlbUZvbG9yLk5hbWUgPT0gIkdyZW5hZGVTeXN0ZW0iIHRoZW4NCglDdXJHcmVuYWRlU3lzdGVtRm9sb3I6RGVzdHJveSgpDQplbmQ=
7a8decee549d55e4ef66edd12350f927|bG9jYWwgR3JlbmFkZVN5c3RlbUZvbGRlciA9IENvbW1vblN0b3JhZ2U6R2V0Q2hpbGRCeU5hbWUoIkdyZW5hZGVTeXN0ZW0iKQ0KbG9jYWwgZnVuY3Rpb24gU2V0dXBHcmVuYWRlU3lzdGVtKCkNCglsb2NhbCBHcmVuYWRlU3lzdGVtID0gUldyZXF1aXJlKEdyZW5hZGVTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJHcmVuYWRlU3lzdGVtIikpDQoJaWYgbm90IEdyZW5hZGVTeXN0ZW0uSXNSdW5uaW5nIGFuZCBub3QgR3JlbmFkZVN5c3RlbS5Jc1NldHVwIHRoZW4NCgkJR3JlbmFkZVN5c3RlbS5TZXR1cCgpDQoJZW5kDQplbmQNCg0KU2V0dXBHcmVuYWRlU3lzdGVtKCk=
d21c05cb9552c2cf7465c2ba624cf054|
164d10322d7eebb219db520c8ea08239|bG9jYWwgR3JlbmFkZUd1aSA9IHt9DQoNCkdyZW5hZGVHdWkuX19pbmRleCA9IEdyZW5hZGVHdWkNCg0KZnVuY3Rpb24gR3JlbmFkZUd1aS5OZXcoZ3JlbmFkZVN5c3RlbSwgZ3JlbmFkZVN5c3RlbUZvbGRlcikNCglsb2NhbCBzZWxmID0gc2V0bWV0YXRhYmxlKHt9LCBHcmVuYWRlR3VpKQ0KCXNlbGYuR3JlbmFkZVN5c3RlbSA9IGdyZW5hZGVTeXN0ZW0NCglzZWxmLlBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KCXNlbGYuR3JlbmFkZVN5c3RlbUZvbGRlciA9IGdyZW5hZGVTeXN0ZW1Gb2xkZXINCglzZWxmLlVpRm9sZGVyID0gbmlsDQoJc2VsZi5Jc0VxdWlwID0gZmFsc2UNCglzZWxmOkluaXQoKQ0KCQ0KCXJldHVybiBzZWxmDQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6SW5pdCgpDQoJc2VsZi5VaUZvbGRlciA9IHNlbGYuR3JlbmFkZVN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIlJlc291cmNlIik6V2FpdEZvckNoaWxkKCJVSSIpOkNsb25lKCkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiR3JlbmFkZSBKdW1wIik6V2FpdEZvckNoaWxkKCJMZWFwIikuT25Qb2ludGVyRG93bjpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkp1bXBCdG5TdGFydCgpIGVuZCkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiR3JlbmFkZSBKdW1wIik6V2FpdEZvckNoaWxkKCJMZWFwIikuT25Qb2ludGVyRXhpdDpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkp1bXBCdG5FbmQoKSBlbmQpDQoJc2VsZi5VaUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkdyZW5hZGUgSnVtcCIpOldhaXRGb3JDaGlsZCgiTGVhcCIpLk9uUG9pbnRlclVwOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uSnVtcEJ0bkVuZCgpIGVuZCkNCgkNCglsb2NhbCBwbGF0Zm9ybSA9IEdhbWVSdW46R2V0UGxhdEZvcm0oKQ0KCWlmIHBsYXRmb3JtID09IEVudW0uUnVudGltZVBsYXRmb3JtLldpbmRvd3MgdGhlbg0KCQlNb3VzZS5Nb3VzZUJ1dHRvbkxlZnREb3duOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uRmlyZUJ0blN0YXJ0KCkgZW5kKQ0KCQlNb3VzZS5Nb3VzZUJ1dHRvbkxlZnRVcDpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkZpcmVCdG5FbmQoKSBlbmQpDQoJZWxzZWlmIHBsYXRmb3JtID09IEVudW0uUnVudGltZVBsYXRmb3JtLkFuZHJvaWQgb3IgcGxhdGZvcm0gPT0gRW51bS5SdW50aW1lUGxhdGZvcm0uSXBob25lIHRoZW4gDQoJCXNlbGYuVWlGb2xkZXI6V2FpdEZvckNoaWxkKCJUaHJvdyBHcmVuYWRlIik6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uUG9pbnRlckRvd246Q29ubmVjdChmdW5jdGlvbigpIHNlbGY6T25GaXJlQnRuU3RhcnQoKSBlbmQpDQoJCXNlbGYuVWlGb2xkZXI6V2FpdEZvckNoaWxkKCJUaHJvdyBHcmVuYWRlIik6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uUG9pbnRlclVwOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uRmlyZUJ0bkVuZCgpIGVuZCkNCgllbmQNCgkNCgkNCgkNCglzZWxmLkNhbmNlbFRocm93UGFuZWwgPSBzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQ2FuY2VsIFRocm93IikNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiVGhyb3cgR3JlbmFkZSIpOldhaXRGb3JDaGlsZCgiVWlCdXR0b24iKS5PbkRyYWc6Q29ubmVjdChmdW5jdGlvbihlKSBzZWxmOk9uR3JlbmFkZVRocm93RHJhZ0V2ZW50KGUpIGVuZCkNCglzZWxmLkNhbmNlbFRocm93UGFuZWw6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uQ2xpY2s6Q29ubmVjdChmdW5jdGlvbigpIHNlbGY6T25VblRocm93Q2xpY2soKSBlbmQpDQoJDQoJc2VsZi5VaUZvbGRlci5QYXJlbnQgPSBzZWxmLlBsYXllci5HYW1lVUkgDQoJDQoJc2VsZjpTaG93T3JIaWRlVWkoZmFsc2UpDQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6T25HcmVuYWRlVGhyb3dEcmFnRXZlbnQoZSkNCglsb2NhbCB0b3VjaCA9IGUuZGVsdGEgKiAwLjENCgkNCgkgaWYgV29ya1NwYWNlLkN1ckNhbWVyYSA9PSBuaWwgdGhlbg0KICAgICAgICAgcmV0dXJuDQogICAgIGVuZCANCgkgDQogICAgIGxvY2FsIHBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KICAgICBpZiBwbGF5ZXIgPT0gbmlsIHRoZW4NCiAgICAgICAgIHJldHVybg0KICAgICBlbmQgDQoJIA0KCSBpZiBwbGF5ZXIuQXZhdGFyID09IG5pbCB0aGVuDQogICAgICAgICByZXR1cm4NCiAgICAgZW5kIA0KCQ0KCSAtLeS4jeaYr+W8gOi9pueKtuaAgQ0KICAgICBpZiBwbGF5ZXIuQXZhdGFyOkdldFN0YXRlKCkgfj0gRW51bS5BdmF0YXJBY3Rpb25TdGF0dXMuRHJpdmVyU2VhdCB0aGVuDQogICAgICAgICBpZiBXb3JrU3BhY2UuQ3VyQ2FtZXJhLkNhbWVyYVR5cCA9PSBFbnVtLkNhbWVyYVR5cGUuV2F0Y2ggdGhlbg0KICAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgZW5kDQogICAgIGVuZA0KDQogICAgIFdvcmtTcGFjZS5DdXJDYW1lcmEuWWF3ID0gV29ya1NwYWNlLkN1ckNhbWVyYS5ZYXcgKyB0b3VjaC54Ow0KICAgICBXb3JrU3BhY2UuQ3VyQ2FtZXJhLlBpdGNoID0gV29ya1NwYWNlLkN1ckNhbWVyYS5QaXRjaCAtIHRvdWNoLnk7DQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6U2hvd09ySGlkZVVpKGlzU2hvdykNCgkNCglzZWxmLklzRXF1aXAgPSBpc1Nob3cNCgkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiR3JlbmFkZSBKdW1wIikuSXNWaXNpYmxlID0gaXNTaG93DQoJDQoJc2VsZi5VaUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIlRocm93IEdyZW5hZGUiKS5Jc1Zpc2libGUgPSBpc1Nob3cNCgkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiR3JlbmFkZSBKdW1wIikuSXNWaXNpYmxlID0gaXNTaG93DQoJDQoJc2VsZi5DYW5jZWxUaHJvd1BhbmVsLklzVmlzYWJsZSA9IGZhbHNlDQoJDQoJR2FtZVVJOldhaXRGb3JDaGlsZCgiTGVhcCIpLklzVmlzYWJsZSA9IG5vdCBpc1Nob3cNCglpZiBpc1Nob3cgdGhlbg0KCQ0KCWVsc2UNCgkJc2VsZi5HcmVuYWRlU3lzdGVtLkNsaWVudFBsYXllckp1bXBFbmQoKQ0KCWVuZA0KZW5kDQpmdW5jdGlvbiBHcmVuYWRlR3VpOk9uRXF1aXBlZENoYW5nZShpc0VxdWlwKQ0KCXNlbGY6U2hvd09ySGlkZVVpKGlzRXF1aXApDQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6T25VblRocm93Q2xpY2soKQ0KCWlmIG5vdCBzZWxmLklzRXF1aXAgdGhlbiByZXR1cm4gZW5kDQoJc2VsZi5DYW5jZWxUaHJvd1BhbmVsLklzVmlzYWJsZSA9IGZhbHNlDQoJDQoJc2VsZi5HcmVuYWRlU3lzdGVtLkNhbmNlbEhvbGQoKQ0KZW5kDQpmdW5jdGlvbiBHcmVuYWRlR3VpOk9uRmlyZUJ0blN0YXJ0KCkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuQ2FuY2VsVGhyb3dQYW5lbC5Jc1Zpc2FibGUgPSB0cnVlDQoJDQoJc2VsZi5HcmVuYWRlU3lzdGVtLkNsaWVudEZpcmVTdGFydCgpDQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6T25GaXJlQnRuRW5kKCkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuQ2FuY2VsVGhyb3dQYW5lbC5Jc1Zpc2FibGUgPSBmYWxzZQ0KCQ0KCXNlbGYuR3JlbmFkZVN5c3RlbS5DbGllbnRGaXJlRW5kKCkNCmVuZA0KDQoNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6T25KdW1wQnRuU3RhcnQoKQ0KCQ0KCWlmIG5vdCBzZWxmLklzRXF1aXAgdGhlbiByZXR1cm4gZW5kDQoJDQoJc2VsZi5HcmVuYWRlU3lzdGVtLkNsaWVudFBsYXllckp1bXBTdGFydCgpDQplbmQNCmZ1bmN0aW9uIEdyZW5hZGVHdWk6T25KdW1wQnRuRW5kKCkNCgkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuR3JlbmFkZVN5c3RlbS5DbGllbnRQbGF5ZXJKdW1wRW5kKCkNCmVuZA0KcmV0dXJuIEdyZW5hZGVHdWk=
fd5834f8a68171ee05490c791efdb7e1|
d107e02556b23f7ade8cb33a3b712197|bG9jYWwgUGFyYWJvbGEgPSB7fQ0KDQpQYXJhYm9sYS5fX2luZGV4ID0gUGFyYWJvbGENCg0KZnVuY3Rpb24gUGFyYWJvbGEuTmV3KGdyZW5hZGVTeXN0ZW0pDQoJbG9jYWwgc2VsZiA9IHNldG1ldGF0YWJsZSh7fSwgUGFyYWJvbGEpDQoJc2VsZi5EcmF3ID0gZmFsc2UNCglzZWxmLkFERF9BTkdMRSA9IDMwDQoJc2VsZi5TUEVFRCA9IDE1IC0t6YCf5bqmDQoJc2VsZi5oaXRJbmZvID0gbmlsDQoJc2VsZi5HcmVuYWRlU3lzdGVtID0gZ3JlbmFkZVN5c3RlbQ0KCXNlbGYucGxheWVyID0gUGxheWVyczpHZXRMb2NhbFBsYXllcigpDQoJR2FtZVJ1bi5MYXRlVXBkYXRlOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOlVwZGF0ZSgpIGVuZCkNCglyZXR1cm4gc2VsZg0KZW5kDQpmdW5jdGlvbiBQYXJhYm9sYTpTZXREcmF3KGRyYXcpDQoJc2VsZi5EcmF3ID0gZHJhdw0KCWlmIG5vdCBkcmF3IHRoZW4NCgkJVW5EcmF3TGluZSgpDQoJZW5kDQplbmQNCmZ1bmN0aW9uIFBhcmFib2xhOlVwZGF0ZSgpDQoJaWYgbm90IHNlbGYuRHJhdyBvciBzZWxmLnBsYXllci5BdmF0YXIgPT0gbmlsIHRoZW4NCgkJcmV0dXJuDQoJZW5kDQoJbG9jYWwgdCA9IDAuMDENCiAgICBsb2NhbCBsaXN0ID0ge30NCiAgICBsb2NhbCBhbmdsZVogPSAwDQoNCiAgICBpZiBXb3JrU3BhY2UuQ3VyQ2FtZXJhIH49IG5pbCB0aGVuDQogICAgICAgIGFuZ2xlWiA9IC1Xb3JrU3BhY2UuQ3VyQ2FtZXJhLlBpdGNoDQogICAgZW5kDQogICAgICAgIA0KICAgIGFuZ2xlWiA9IGFuZ2xlWiArIHNlbGYuQUREX0FOR0xFDQogICAgbG9jYWwgZnBzUGxheWVyRm9yd2FyZCA9IFF1YXRlcm5pb24uRXVsZXIoLWFuZ2xlWiwgc2VsZi5wbGF5ZXIuQXZhdGFyLlJvdGF0aW9uLnksIHNlbGYucGxheWVyLkF2YXRhciAuUm90YXRpb24ueikgKiBWZWN0b3IzLmZvcndhcmQNCiAgICBsb2NhbCBmcHNQbGF5ZXJSaWdodCA9IFF1YXRlcm5pb24uRXVsZXIoLWFuZ2xlWiwgc2VsZi5wbGF5ZXIuQXZhdGFyLlJvdGF0aW9uLnksIHNlbGYucGxheWVyLkF2YXRhci5Sb3RhdGlvbi56KSAqIFZlY3RvcjMucmlnaHQNCiAgICBsb2NhbCBhbmdsZSA9IFZlY3RvcjMuQW5nbGUoZnBzUGxheWVyRm9yd2FyZCwgZnBzUGxheWVyRm9yd2FyZCkNCgkNCglpZiBzZWxmLkdyZW5hZGVTeXN0ZW0uQ3VyR3JlbmFkZS5HcmVuYWRlT2JqZWN0Lkhvb2sgPT0gbmlsIHRoZW4NCgkJcmV0dXJuDQoJZW5kDQoJDQogICAgbG9jYWwgc3RhcnRHcmVuYWRlUG9pbnQgPSBzZWxmLkdyZW5hZGVTeXN0ZW0uQ3VyR3JlbmFkZS5HcmVuYWRlT2JqZWN0Lkhvb2suUG9zaXRpb24NCiAgICANCiAgICBsb2NhbCBob3Jpem9udGFsU3BlZWQgPSBNYXRoZi5Db3MoYW5nbGUgLyAxODAgKiBNYXRoZi5QSSkgKiBzZWxmLlNQRUVEDQogICAgbG9jYWwgdmVydGljYWxTcGVlZCA9IE1hdGhmLlNpbihhbmdsZSAvIDE4MCAqIE1hdGhmLlBJKSAqIHNlbGYuU1BFRUQNCiAgICANCgktLXNvY2NlciBiYWxsIGxvZ2ljIGFkZGVkLCBsb3dlcmVkIFJheWNhc3QgZnJvbSAxMDAgdG8gNTAsIGxvd2VyaW5nIGRyYXcgcGFyYWJvbGEgDQogICAgZm9yIGk9MCwgNTAgZG8NCiAgICAgICAgbG9jYWwgaG9yaXpvbnRhbFBvaW50ID0gaG9yaXpvbnRhbFNwZWVkICogdCAqIGkNCiAgICAgICAgbG9jYWwgaG9yaXpvbnRhbERpciA9IGZwc1BsYXllckZvcndhcmQgKiBob3Jpem9udGFsUG9pbnQNCiAgICAgICAgbG9jYWwgdmVydGljYWxQb2ludCA9IHZlcnRpY2FsU3BlZWQgKyBXb3JrU3BhY2U6R2V0R3Jhdml0eSgpLnkgKiB0ICogaQ0KICAgICAgICBsb2NhbCBncmF2aXR5ID0gKHZlcnRpY2FsU3BlZWQgKyB2ZXJ0aWNhbFBvaW50KSAvIDIgKiB0ICogaQ0KICAgICAgICBsb2NhbCB2ZXJ0aWNhbERpciA9IFZlY3RvcjMudXAgKiBncmF2aXR5DQogICAgICAgIGxvY2FsIHBvcyA9IHN0YXJ0R3JlbmFkZVBvaW50ICsgaG9yaXpvbnRhbERpciArIHZlcnRpY2FsRGlyDQogICAgICAgIHRhYmxlLmluc2VydChsaXN0LCBwb3MpDQogICAgICAgIGlmIGkgPiAxIHRoZW4NCiAgICAgICAgICAgIGxvY2FsIGhpdEluZm8gPSBuaWwNCiAgICAgICAgICAgIHBvaW50RGlyID0gbGlzdFsjbGlzdCAtIDFdIC0gbGlzdFsjbGlzdCAtIDJdOw0KICAgICAgICAgICAgDQogICAgICAgICAgICBoaXRJbmZvID0gV29ya1NwYWNlOlJheWNhc3RIaXQobGlzdFsjbGlzdCAtIDJdLHBvaW50RGlyLCBwb2ludERpci5tYWduaXR1ZGUpDQogICAgICAgICAgICBsb2NhbCBpc0hpdCA9IFdvcmtTcGFjZTpSYXljYXN0Qm9vbChsaXN0WyNsaXN0IC0gMl0sIHBvaW50RGlyLCBwb2ludERpci5tYWduaXR1ZGUpDQogICAgICAgICAgICANCiAgICAgICAgICAgIGlmIGlzSGl0IHRoZW4NCiAgICAgICAgICAgICAgaWYgaGl0SW5mbyB+PSBuaWwgdGhlbg0KICAgICAgICAgICAgICAgICAgICBsaXN0WyNsaXN0IC0gMV0gPSBoaXRJbmZvLlBvaW50DQogICAgICAgICAgICAgICAgICAgIGJyZWFrDQogICAgICAgICAgICAgICAgZW5kDQogICAgICAgICAgICBlbmQNCiAgICAgICAgZW5kDQogICAgZW5kIAkNCglEcmF3TGluZShsaXN0KQ0KZW5kDQpyZXR1cm4gUGFyYWJvbGEJ
f52c9a8d8a51facff84c0c9884a93e9f|
875f228a0f85764dfb10d68accedc841|YXZhdGFyID0gc2NyaXB0LlBhcmVudCAtLSDojrflj5bop5LoibINCmxvY2FsIGFuaW1hdGlvbiA9IGF2YXRhci5BbmltYXRlLlN0YW5kIC0tIOiOt+WPluinkuiJsuS4i+eahOWQjeWtl+S4uuKAnFN0YW5k4oCd5Yqo5L2c5a+56LGhDQpsb2NhbCBkZWFkID0gYXZhdGFyLkFuaW1hdGUuRGVhZCAtLSDojrflj5bop5LoibLkuIvnmoTlkI3lrZfkuLrigJxEZWFk4oCd5Yqo5L2c5a+56LGhDQpsb2NhbCBkZWFkMiA9IGF2YXRhci5BbmltYXRlLkRlYWQyIC0tIOiOt+WPluinkuiJsuS4i+eahOWQjeWtl+S4uuKAnERlYWQy4oCd5Yqo5L2c5a+56LGhDQphbmltYXRpb246UGxheUFuaW1hdGlvbigpIC0tIOaSreaUvuWKqOeUuw0KDQpkZWFkLkFuaW1hdGlvbkNvbXBsZXRlOkNvbm5lY3QoZnVuY3Rpb24oKQ0KCWRlYWQyOlBsYXlBbmltYXRpb24oKQ0KCQ0KZW5kKQ0KDQphdmF0YXIub25BdmF0YXJEZWFkOkNvbm5lY3QoZnVuY3Rpb24oKQ0KDQoJYW5pbWF0aW9uOlN0b3BBbmltYXRpb24oKQ0KCWRlYWQ6UGxheUFuaW1hdGlvbigpDQoJDQplbmQp
634578cf5025c12b7d219b4eb2df6e56|bG9jYWwgQ3VyQmFza2V0QmFsbFN5c3RlbUZvbG9yID0gc2NyaXB0LlBhcmVudA0KbG9jYWwgdG9vbCA9IHNjcmlwdC5QYXJlbnQuUGFyZW50DQpsb2NhbCBCYXNrZXRCYWxsU3lzdGVtRm9sZGVyID0gQ29tbW9uU3RvcmFnZTpHZXRDaGlsZEJ5TmFtZSgiQmFza2V0QmFsbFN5c3RlbSIpDQoNCi0t5aaC5p6c5p6q57O757uf5rKh5pyJ5ou36LSd6L+H77yM5ou36LSd5Yiw6YCa55So5a2Y5YKoDQppZiBCYXNrZXRCYWxsU3lzdGVtRm9sZGVyID09IG5pbCB0aGVuDQoJQmFza2V0QmFsbFN5c3RlbUZvbGRlciA9IEN1ckJhc2tldEJhbGxTeXN0ZW1Gb2xvcjpDbG9uZSgpDQoJQmFza2V0QmFsbFN5c3RlbUZvbGRlci5QYXJlbnQgPSBDb21tb25TdG9yYWdlDQplbmQNCg0KLS3lpoLmnpzmnI3liqHlmajpgLvovpHph4zpnaLmsqHmnInmnI3liqHlmajohJrmnKzlsIbohJrmnKzmi7fotJ3liLDmnI3liqHlmajpgLvovpHlubbmiafooYzpgLvovpENCmlmIFNlcnZlckxvZ2ljOkdldENoaWxkQnlOYW1lKCJTZXJ2ZXJCYXNrZXRCYWxsU2NyaXB0IikgPT0gbmlsIHRoZW4NCglzY3JpcHQuUGFyZW50ID0gU2VydmVyTG9naWMNCglsb2NhbCBCYXNrZXRCYWxsU3lzdGVtID0gUldyZXF1aXJlKEJhc2tldEJhbGxTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJCYXNrZXRCYWxsU3lzdGVtIikpDQoJaWYgbm90IEJhc2tldEJhbGxTeXN0ZW0uSXNSdW5uaW5nIGFuZCBub3QgQmFza2V0QmFsbFN5c3RlbS5Jc1NldHVwIHRoZW4NCgkJQmFza2V0QmFsbFN5c3RlbS5TZXR1cCgpDQoJZW5kDQoJDQoJLS3lrqLmiLfnq6/mi7fotJ3ohJrmnKwNCglsb2NhbCBmdW5jdGlvbiBTZXR1cENsaWVudEJhc2tldEJhbGxTY3JpcHQocGxheWVyKQ0KCQlsb2NhbCBjbGllbnRCYXNrZXRCYWxsU2NyaXB0ID0gcGxheWVyLlBsYXllclNjcmlwdHM6R2V0Q2hpbGRCeU5hbWUoIkNsaWVudEJhc2tldEJhbGxTY3JpcHQiKQ0KCQlpZiBjbGllbnRCYXNrZXRCYWxsU2NyaXB0ID09IG5pbCB0aGVuDQoJCQljbGllbnRCYXNrZXRCYWxsU2NyaXB0ID0gQmFza2V0QmFsbFN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkNsaWVudEJhc2tldEJhbGxTY3JpcHQiKTpDbG9uZSgpDQoJCQljbGllbnRCYXNrZXRCYWxsU2NyaXB0LlBhcmVudCA9IHBsYXllci5QbGF5ZXJTY3JpcHRzDQoJCWVuZA0KCWVuZA0KCQ0KCVBsYXllcnMuUGxheWVyQWRkZWQ6Q29ubmVjdChmdW5jdGlvbihwbGF5ZXJpZCkNCgkJbG9jYWwgcGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChwbGF5ZXJpZCkJDQoJCVNldHVwQ2xpZW50QmFza2V0QmFsbFNjcmlwdChwbGF5ZXIpDQoJZW5kKQ0KDQogICAgZm9yIF8sIHBsYXllciBpbiBwYWlycyhQbGF5ZXJzOkdldEFsbFBsYXllcnMoKSkgZG8NCgkJU2V0dXBDbGllbnRCYXNrZXRCYWxsU2NyaXB0KHBsYXllcikNCgllbmQNCmVuZA0KLS3mt7vliqDlkozliKDpmaTmnqrnmoTml7blgJnnu5lHdW5TeXN0ZW3lj5HpgIHkuovku7YNCkJhc2tldEJhbGxTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJCYXNrZXRCYWxsQWRkIik6RmlyZUxvY2FsU2VydmVyKHRvb2wpDQp0b29sLkRlc3Ryb3llZDpDb25uZWN0KGZ1bmN0aW9uKCkgDQoJQmFza2V0QmFsbFN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkJhc2tldEJhbGxSZW1vdmUiKTpGaXJlTG9jYWxTZXJ2ZXIodG9vbCkNCmVuZCkNCg0KDQotLeWcqOaequS4i+mdoueahOatpuWZqOezu+e7n+ebtOaOpeWIoOmZpOi+g+WwkeWQjOatpeaVsOaNrumHjw0KaWYgQ3VyQmFza2V0QmFsbFN5c3RlbUZvbG9yLk5hbWUgPT0gIkJhc2tldEJhbGxTeXN0ZW0iIHRoZW4NCglDdXJCYXNrZXRCYWxsU3lzdGVtRm9sb3I6RGVzdHJveSgpDQplbmQ=
31a9b6ca7b5fcf2706d2edcae6ed030c|bG9jYWwgQmFza2V0QmFsbFN5c3RlbUZvbGRlciA9IENvbW1vblN0b3JhZ2U6R2V0Q2hpbGRCeU5hbWUoIkJhc2tldEJhbGxTeXN0ZW0iKQ0KbG9jYWwgZnVuY3Rpb24gU2V0dXBCYXNrZXRCYWxsU3lzdGVtKCkNCglsb2NhbCBCYXNrZXRCYWxsU3lzdGVtID0gUldyZXF1aXJlKEJhc2tldEJhbGxTeXN0ZW1Gb2xkZXI6V2FpdEZvckNoaWxkKCJCYXNrZXRCYWxsU3lzdGVtIikpDQoJaWYgbm90IEJhc2tldEJhbGxTeXN0ZW0uSXNSdW5uaW5nIGFuZCBub3QgQmFza2V0QmFsbFN5c3RlbS5Jc1NldHVwIHRoZW4NCgkJQmFza2V0QmFsbFN5c3RlbS5TZXR1cCgpDQoJZW5kDQplbmQNCg0KU2V0dXBCYXNrZXRCYWxsU3lzdGVtKCk=
5c13434474e2ac9c75e590624e710f7c|
6d6893ad44fa1031c63052964799a73c|bG9jYWwgQmFza2V0QmFsbEd1aSA9IHt9DQoNCkJhc2tldEJhbGxHdWkuX19pbmRleCA9IEJhc2tldEJhbGxHdWkNCg0KZnVuY3Rpb24gQmFza2V0QmFsbEd1aS5OZXcoYmFza2V0QmFsbFN5c3RlbSwgYmFza2V0QmFsbFN5c3RlbUZvbGRlcikNCglsb2NhbCBzZWxmID0gc2V0bWV0YXRhYmxlKHt9LCBCYXNrZXRCYWxsR3VpKQ0KCXNlbGYuQmFza2V0QmFsbFN5c3RlbSA9IGJhc2tldEJhbGxTeXN0ZW0NCglzZWxmLlBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KCXNlbGYuQmFza2V0QmFsbFN5c3RlbUZvbGRlciA9IGJhc2tldEJhbGxTeXN0ZW1Gb2xkZXINCglzZWxmLlVpRm9sZGVyID0gbmlsDQoJc2VsZi5Jc0VxdWlwID0gZmFsc2UNCglzZWxmOkluaXQoKQ0KCQ0KCXJldHVybiBzZWxmDQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6SW5pdCgpDQoJc2VsZi5VaUZvbGRlciA9IHNlbGYuQmFza2V0QmFsbFN5c3RlbUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIlJlc291cmNlIik6V2FpdEZvckNoaWxkKCJVSSIpOkNsb25lKCkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQmFza2V0QmFsbCBKdW1wIik6V2FpdEZvckNoaWxkKCJMZWFwIikuT25Qb2ludGVyRG93bjpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkp1bXBCdG5TdGFydCgpIGVuZCkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQmFza2V0QmFsbCBKdW1wIik6V2FpdEZvckNoaWxkKCJMZWFwIikuT25Qb2ludGVyRXhpdDpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkp1bXBCdG5FbmQoKSBlbmQpDQoJc2VsZi5VaUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIkJhc2tldEJhbGwgSnVtcCIpOldhaXRGb3JDaGlsZCgiTGVhcCIpLk9uUG9pbnRlclVwOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uSnVtcEJ0bkVuZCgpIGVuZCkNCgkNCglsb2NhbCBwbGF0Zm9ybSA9IEdhbWVSdW46R2V0UGxhdEZvcm0oKQ0KCWlmIHBsYXRmb3JtID09IEVudW0uUnVudGltZVBsYXRmb3JtLldpbmRvd3MgdGhlbg0KCQlNb3VzZS5Nb3VzZUJ1dHRvbkxlZnREb3duOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uRmlyZUJ0blN0YXJ0KCkgZW5kKQ0KCQlNb3VzZS5Nb3VzZUJ1dHRvbkxlZnRVcDpDb25uZWN0KGZ1bmN0aW9uKCkgc2VsZjpPbkZpcmVCdG5FbmQoKSBlbmQpDQoJZWxzZWlmIHBsYXRmb3JtID09IEVudW0uUnVudGltZVBsYXRmb3JtLkFuZHJvaWQgb3IgcGxhdGZvcm0gPT0gRW51bS5SdW50aW1lUGxhdGZvcm0uSXBob25lIHRoZW4gDQoJCXNlbGYuVWlGb2xkZXI6V2FpdEZvckNoaWxkKCJUaHJvdyBCYXNrZXRCYWxsIik6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uUG9pbnRlckRvd246Q29ubmVjdChmdW5jdGlvbigpIHNlbGY6T25GaXJlQnRuU3RhcnQoKSBlbmQpDQoJCXNlbGYuVWlGb2xkZXI6V2FpdEZvckNoaWxkKCJUaHJvdyBCYXNrZXRCYWxsIik6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uUG9pbnRlclVwOkNvbm5lY3QoZnVuY3Rpb24oKSBzZWxmOk9uRmlyZUJ0bkVuZCgpIGVuZCkNCgllbmQNCgkNCgkNCgkNCglzZWxmLkNhbmNlbFRocm93UGFuZWwgPSBzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQ2FuY2VsIFRocm93IikNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiVGhyb3cgQmFza2V0QmFsbCIpOldhaXRGb3JDaGlsZCgiVWlCdXR0b24iKS5PbkRyYWc6Q29ubmVjdChmdW5jdGlvbihlKSBzZWxmOk9uQmFza2V0QmFsbFRocm93RHJhZ0V2ZW50KGUpIGVuZCkNCglzZWxmLkNhbmNlbFRocm93UGFuZWw6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uQ2xpY2s6Q29ubmVjdChmdW5jdGlvbigpIHNlbGY6T25VblRocm93Q2xpY2soKSBlbmQpDQoJDQoJc2VsZi5VaUZvbGRlci5QYXJlbnQgPSBzZWxmLlBsYXllci5HYW1lVUkgDQoJDQoJc2VsZjpTaG93T3JIaWRlVWkoZmFsc2UpDQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6T25CYXNrZXRCYWxsVGhyb3dEcmFnRXZlbnQoZSkNCglsb2NhbCB0b3VjaCA9IGUuZGVsdGEgKiAwLjENCgkNCgkgaWYgV29ya1NwYWNlLkN1ckNhbWVyYSA9PSBuaWwgdGhlbg0KICAgICAgICAgcmV0dXJuDQogICAgIGVuZCANCgkgDQogICAgIGxvY2FsIHBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KICAgICBpZiBwbGF5ZXIgPT0gbmlsIHRoZW4NCiAgICAgICAgIHJldHVybg0KICAgICBlbmQgDQoJIA0KCSBpZiBwbGF5ZXIuQXZhdGFyID09IG5pbCB0aGVuDQogICAgICAgICByZXR1cm4NCiAgICAgZW5kIA0KCQ0KCSAtLeS4jeaYr+W8gOi9pueKtuaAgQ0KICAgICBpZiBwbGF5ZXIuQXZhdGFyOkdldFN0YXRlKCkgfj0gRW51bS5BdmF0YXJBY3Rpb25TdGF0dXMuRHJpdmVyU2VhdCB0aGVuDQogICAgICAgICBpZiBXb3JrU3BhY2UuQ3VyQ2FtZXJhLkNhbWVyYVR5cCA9PSBFbnVtLkNhbWVyYVR5cGUuV2F0Y2ggdGhlbg0KICAgICAgICAgICAgIHJldHVybg0KICAgICAgICAgZW5kDQogICAgIGVuZA0KDQogICAgIFdvcmtTcGFjZS5DdXJDYW1lcmEuWWF3ID0gV29ya1NwYWNlLkN1ckNhbWVyYS5ZYXcgKyB0b3VjaC54Ow0KICAgICBXb3JrU3BhY2UuQ3VyQ2FtZXJhLlBpdGNoID0gV29ya1NwYWNlLkN1ckNhbWVyYS5QaXRjaCAtIHRvdWNoLnk7DQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6U2hvd09ySGlkZVVpKGlzU2hvdykNCgkNCglzZWxmLklzRXF1aXAgPSBpc1Nob3cNCgkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQmFza2V0QmFsbCBKdW1wIikuSXNWaXNpYmxlID0gaXNTaG93DQoJDQoJc2VsZi5VaUZvbGRlcjpXYWl0Rm9yQ2hpbGQoIlRocm93IEJhc2tldEJhbGwiKS5Jc1Zpc2libGUgPSBpc1Nob3cNCgkNCglzZWxmLlVpRm9sZGVyOldhaXRGb3JDaGlsZCgiQmFza2V0QmFsbCBKdW1wIikuSXNWaXNpYmxlID0gaXNTaG93DQoJDQoJc2VsZi5DYW5jZWxUaHJvd1BhbmVsLklzVmlzYWJsZSA9IGZhbHNlDQoJDQoJR2FtZVVJOldhaXRGb3JDaGlsZCgiTGVhcCIpLklzVmlzYWJsZSA9IG5vdCBpc1Nob3cNCglpZiBpc1Nob3cgdGhlbg0KCQ0KCWVsc2UNCgkJc2VsZi5CYXNrZXRCYWxsU3lzdGVtLkNsaWVudFBsYXllckp1bXBFbmQoKQ0KCWVuZA0KZW5kDQpmdW5jdGlvbiBCYXNrZXRCYWxsR3VpOk9uRXF1aXBlZENoYW5nZShpc0VxdWlwKQ0KCXNlbGY6U2hvd09ySGlkZVVpKGlzRXF1aXApDQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6T25VblRocm93Q2xpY2soKQ0KCWlmIG5vdCBzZWxmLklzRXF1aXAgdGhlbiByZXR1cm4gZW5kDQoJc2VsZi5DYW5jZWxUaHJvd1BhbmVsLklzVmlzYWJsZSA9IGZhbHNlDQoJDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtLkNhbmNlbEhvbGQoKQ0KZW5kDQpmdW5jdGlvbiBCYXNrZXRCYWxsR3VpOk9uRmlyZUJ0blN0YXJ0KCkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuQ2FuY2VsVGhyb3dQYW5lbC5Jc1Zpc2FibGUgPSB0cnVlDQoJDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtLkNsaWVudEZpcmVTdGFydCgpDQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6T25GaXJlQnRuRW5kKCkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuQ2FuY2VsVGhyb3dQYW5lbC5Jc1Zpc2FibGUgPSBmYWxzZQ0KCQ0KCXNlbGYuQmFza2V0QmFsbFN5c3RlbS5DbGllbnRGaXJlRW5kKCkNCmVuZA0KDQoNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6T25KdW1wQnRuU3RhcnQoKQ0KCQ0KCWlmIG5vdCBzZWxmLklzRXF1aXAgdGhlbiByZXR1cm4gZW5kDQoJDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtLkNsaWVudFBsYXllckp1bXBTdGFydCgpDQplbmQNCmZ1bmN0aW9uIEJhc2tldEJhbGxHdWk6T25KdW1wQnRuRW5kKCkNCgkNCglpZiBub3Qgc2VsZi5Jc0VxdWlwIHRoZW4gcmV0dXJuIGVuZA0KCQ0KCXNlbGYuQmFza2V0QmFsbFN5c3RlbS5DbGllbnRQbGF5ZXJKdW1wRW5kKCkNCmVuZA0KcmV0dXJuIEJhc2tldEJhbGxHdWk=
b106ca7209e361f68ae339a4c99b9c10|
714bf123657b0cf4441752fc0df06213|bG9jYWwgUGFyYWJvbGEgPSB7fQ0KDQpQYXJhYm9sYS5fX2luZGV4ID0gUGFyYWJvbGENCg0KZnVuY3Rpb24gUGFyYWJvbGEuTmV3KGJhc2tldEJhbGxTeXN0ZW0pDQoJbG9jYWwgc2VsZiA9IHNldG1ldGF0YWJsZSh7fSwgUGFyYWJvbGEpDQoJc2VsZi5EcmF3ID0gZmFsc2UNCglzZWxmLkFERF9BTkdMRSA9IDUwDQoJc2VsZi5TUEVFRCA9IDEyIC0t6YCf5bqmDQoJc2VsZi5oaXRJbmZvID0gbmlsDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtID0gYmFza2V0QmFsbFN5c3RlbQ0KCXNlbGYucGxheWVyID0gUGxheWVyczpHZXRMb2NhbFBsYXllcigpDQoJc2VsZi5sYXN0U3RhcnRpbmcgPSAwDQoJc2VsZi5zZXBhcmF0aW9uID0gMjcNCglHYW1lUnVuLkxhdGVVcGRhdGU6Q29ubmVjdChmdW5jdGlvbigpIHNlbGY6VXBkYXRlKCkgZW5kKQ0KCXJldHVybiBzZWxmDQplbmQNCmZ1bmN0aW9uIFBhcmFib2xhOlNldERyYXcoZHJhdykNCglzZWxmLkRyYXcgPSBkcmF3DQoJaWYgbm90IGRyYXcgdGhlbg0KCQlVbkRyYXdMaW5lKCkNCgllbmQNCmVuZA0KZnVuY3Rpb24gUGFyYWJvbGE6VXBkYXRlKCkNCglpZiBub3Qgc2VsZi5EcmF3IG9yIHNlbGYucGxheWVyLkF2YXRhciA9PSBuaWwgdGhlbg0KCQlyZXR1cm4NCgllbmQNCglsb2NhbCB0ID0gMC4wMQ0KICAgIGxvY2FsIGxpc3QgPSB7fQ0KICAgIGxvY2FsIGFuZ2xlWiA9IDANCg0KICAgIGlmIFdvcmtTcGFjZS5DdXJDYW1lcmEgfj0gbmlsIHRoZW4NCiAgICAgICAgYW5nbGVaID0gLVdvcmtTcGFjZS5DdXJDYW1lcmEuUGl0Y2gNCiAgICBlbmQNCiAgICAgICAgDQogICAgYW5nbGVaID0gYW5nbGVaICsgc2VsZi5BRERfQU5HTEUNCiAgICBsb2NhbCBmcHNQbGF5ZXJGb3J3YXJkID0gUXVhdGVybmlvbi5FdWxlcigtYW5nbGVaLCBzZWxmLnBsYXllci5BdmF0YXIuUm90YXRpb24ueSwgc2VsZi5wbGF5ZXIuQXZhdGFyIC5Sb3RhdGlvbi56KSAqIFZlY3RvcjMuZm9yd2FyZA0KICAgIGxvY2FsIGZwc1BsYXllclJpZ2h0ID0gUXVhdGVybmlvbi5FdWxlcigtYW5nbGVaLCBzZWxmLnBsYXllci5BdmF0YXIuUm90YXRpb24ueSwgc2VsZi5wbGF5ZXIuQXZhdGFyLlJvdGF0aW9uLnopICogVmVjdG9yMy5yaWdodA0KICAgIGxvY2FsIGFuZ2xlID0gVmVjdG9yMy5BbmdsZShmcHNQbGF5ZXJGb3J3YXJkLCBmcHNQbGF5ZXJGb3J3YXJkKQ0KCQ0KCWlmIHNlbGYuQmFza2V0QmFsbFN5c3RlbS5DdXJCYXNrZXRCYWxsLkJhc2tldEJhbGxPYmplY3QuSG9vayA9PSBuaWwgdGhlbg0KCQlyZXR1cm4NCgllbmQNCgkNCiAgICBsb2NhbCBzdGFydEJhc2tldEJhbGxQb2ludCA9IHNlbGYuQmFza2V0QmFsbFN5c3RlbS5DdXJCYXNrZXRCYWxsLkJhc2tldEJhbGxPYmplY3QuSG9vay5Qb3NpdGlvbg0KICAgIA0KICAgIGxvY2FsIGhvcml6b250YWxTcGVlZCA9IE1hdGhmLkNvcyhhbmdsZSAvIDE4MCAqIE1hdGhmLlBJKSAqIHNlbGYuU1BFRUQNCiAgICBsb2NhbCB2ZXJ0aWNhbFNwZWVkID0gTWF0aGYuU2luKGFuZ2xlIC8gMTgwICogTWF0aGYuUEkpICogc2VsZi5TUEVFRA0KICAgIA0KICAgIGZvciBpPTAsIDM1MCBkbw0KICAgICAgICBsb2NhbCBob3Jpem9udGFsUG9pbnQgPSBob3Jpem9udGFsU3BlZWQgKiB0ICogaQ0KICAgICAgICBsb2NhbCBob3Jpem9udGFsRGlyID0gZnBzUGxheWVyRm9yd2FyZCAqIGhvcml6b250YWxQb2ludA0KICAgICAgICBsb2NhbCB2ZXJ0aWNhbFBvaW50ID0gdmVydGljYWxTcGVlZCArIFdvcmtTcGFjZTpHZXRHcmF2aXR5KCkueSAqIHQgKiBpDQogICAgICAgIGxvY2FsIGdyYXZpdHkgPSAodmVydGljYWxTcGVlZCArIHZlcnRpY2FsUG9pbnQpIC8gMiAqIHQgKiBpDQogICAgICAgIGxvY2FsIHZlcnRpY2FsRGlyID0gVmVjdG9yMy51cCAqIGdyYXZpdHkNCiAgICAgICAgbG9jYWwgcG9zID0gc3RhcnRCYXNrZXRCYWxsUG9pbnQgKyBob3Jpem9udGFsRGlyICsgdmVydGljYWxEaXINCiAgICAgICAgdGFibGUuaW5zZXJ0KGxpc3QsIHBvcykNCiAgICAgICAgaWYgaSA+IDEgdGhlbg0KICAgICAgICAgICAgbG9jYWwgaGl0SW5mbyA9IG5pbA0KICAgICAgICAgICAgcG9pbnREaXIgPSBsaXN0WyNsaXN0IC0gMV0gLSBsaXN0WyNsaXN0IC0gMl07DQogICAgICAgICAgICANCiAgICAgICAgICAgIGhpdEluZm8gPSBXb3JrU3BhY2U6UmF5Y2FzdEhpdChsaXN0WyNsaXN0IC0gMl0scG9pbnREaXIsIHBvaW50RGlyLm1hZ25pdHVkZSkNCiAgICAgICAgICAgIGxvY2FsIGlzSGl0ID0gV29ya1NwYWNlOlJheWNhc3RCb29sKGxpc3RbI2xpc3QgLSAyXSwgcG9pbnREaXIsIHBvaW50RGlyLm1hZ25pdHVkZSkNCiAgICAgICAgICAgIA0KICAgICAgICAgICAgaWYgaXNIaXQgdGhlbg0KICAgICAgICAgICAgICBpZiBoaXRJbmZvIH49IG5pbCB0aGVuDQogICAgICAgICAgICAgICAgICAgIGxpc3RbI2xpc3QgLSAxXSA9IGhpdEluZm8uUG9pbnQNCiAgICAgICAgICAgICAgICAgICAgYnJlYWsNCiAgICAgICAgICAgICAgICBlbmQNCiAgICAgICAgICAgIGVuZA0KICAgICAgICBlbmQNCiAgICBlbmQgCQ0KCQ0KCWxpc3RDb3VudCA9IHRhYmxlLm1heG4obGlzdCkNCgkNCglpZiBzZWxmLmxhc3RTdGFydGluZyArIHNlbGYuc2VwYXJhdGlvbiA+IGxpc3RDb3VudCB0aGVuIHNlbGYubGFzdFN0YXJ0aW5nID0gMCBlbmQNCgkNCgl0b0RyYXcgPSB7fQ0KCQ0KCWZvciBpID0gc2VsZi5sYXN0U3RhcnRpbmcsIHNlbGYubGFzdFN0YXJ0aW5nICsgc2VsZi5zZXBhcmF0aW9uLCAxIGRvDQoJCXRhYmxlLmluc2VydCh0b0RyYXcsIGxpc3RbaV0pDQoJZW5kDQoJDQoJc2VsZi5sYXN0U3RhcnRpbmcgPSBzZWxmLmxhc3RTdGFydGluZyArIDENCgkNCglEcmF3TGluZSh0b0RyYXcpCQ0KCS0tRHJhd0xpbmUobGlzdCkNCmVuZA0KcmV0dXJuIFBhcmFib2xhCQ==
b8ff4edb09cac437832f73f374acee6e|bG9jYWwgTWlzc2lsZSA9IHt9DQpsb2NhbCBESVNUQU5DRSA9IDMgLS0g6IyD5Zu0DQpsb2NhbCBIRUFMVEggPSAyMDAtLSDkvKTlrrMNCmxvY2FsIFRJTUUgPSAzCS0tIOeIhueCuOaXtumXtCjml6DmlYjvvIzniIbngrjlnKjnibnmlYjml7bpl7TlkI4xc+WQjuaJp+ihjCkNCmxvY2FsIEVGRkVDVFNUSU1FID0gMC41IC0tIOeJueaViOaXtumXtA0KbG9jYWwgREVMQVlUSU1FID0gMi41IC0tIOeJueaViOaXtumXtOS5i+WQjueahOW7tuaXtueIhueCuOaXtumXtA0KDQoNCk1pc3NpbGUuX19pbmRleCA9IE1pc3NpbGUNCmZ1bmN0aW9uIE1pc3NpbGUuTmV3KHBsYXllcklkLCB0b29sLCBhbmdsZVosIHNwZWVkLCByeCwgcnksIHJ6LCBweCwgcHksIHB6LCBiYXNrZXRCYWxsU3lzdGVtKQ0KCWxvY2FsIHNlbGYgPSBzZXRtZXRhdGFibGUoe30sIE1pc3NpbGUpDQoJc2VsZi5TdGF0dXMgPSAiV2FpdEV4cGxvc2lvbiINCglzZWxmLlRpbWUgPSAwDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtID0gYmFza2V0QmFsbFN5c3RlbQ0KCQ0KCWxvY2FsIGZ1bmN0aW9uIGhhbmRsZXIob2JqLCBtZXRob2QpDQoJCXJldHVybiBmdW5jdGlvbiguLi4pDQoJCQlyZXR1cm4gbWV0aG9kKG9iaiwgLi4uKQ0KCQllbmQNCgllbmQNCgkNCglzZWxmLlVwZGF0ZUhhbmRsZSA9IGhhbmRsZXIoc2VsZiwgc2VsZi5VcGRhdGUpDQoJR2FtZVJ1bi5VcGRhdGU6Q29ubmVjdChzZWxmLlVwZGF0ZUhhbmRsZSkNCg0KCXNlbGYuUGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChwbGF5ZXJJZCkNCgktLWJhc2tldEJhbGwuSG9va1siVGhyb3cgU291bmQiXS5Qb3NpdGlvbiA9IGJhc2tldEJhbGwuSG9vay5Qb3NpdGlvbg0KCS0tYmFza2V0QmFsbC5Ib29rWyJUaHJvdyBTb3VuZCJdOlBsYXkoKQ0KCQ0KLS0JcHJpbnQoIuaSreaUvuaKleaOt+mfs+aViCIpDQoJbG9jYWwgZnBzUGxheWVyUm90YXRpb24gPSBRdWF0ZXJuaW9uLkV1bGVyKC1hbmdsZVosIHJ5LCByeikNCglsb2NhbCBmcHNQbGF5ZXJGb3J3YXJkID0gUXVhdGVybmlvbi5FdWxlcigtYW5nbGVaLCByeSwgcnopICogVmVjdG9yMy5mb3J3YXJkDQoJbG9jYWwgZnBzUGxheWVyUmlnaHQgPSBRdWF0ZXJuaW9uLkV1bGVyKC1hbmdsZVosIHJ5LCByeikgKiBWZWN0b3IzLnJpZ2h0DQoJbG9jYWwgc3RhcnRCYXNrZXRCYWxsUG9pbnQgPSBWZWN0b3IzLk5ldyhweCwgcHksIHB6KTsNCg0KDQogICAgLS1DcmVhdGUgYSBuZXcgYmFza2V0YmFsbCB0b2wgYW5kIG1ha2UgdGhlIG5ldyB0b29sIHRoZSBtaXNzbGUgKFRocm93IHdoYXQgeW91IGNhbiBwaWNrIHVwIGFnYWluKQ0KCWxvY2FsIHBsYXllciA9IFBsYXllcnM6R2V0UGxheWVyQnlVc2VySWQocGxheWVySWQpDQoJLS1wcmludCgiQ2FsbGluZyBmcm9tIEJhc2tldEJhbGxTeXN0ZW0iKQ0KCS0tbG9jYWwgb2JqID0gR2V0U2VydmljZSgiU2VydmVyTG9naWMiKS5Tb2NjZXJTZXJ2ZXJMb2dpYw0KCXByaW50KHBsYXllci5QbGF5ZXJTY3JpcHRzLlBsYXllckZsYWdzLnBsYXlpbmdTb2NjZXIuVmFsdWUpDQoJLS1vYmouU29jY2VyU2VydmVyTG9naWM6aXNQbGF5aW5nKHBsYXllcklkKQ0KCWxvY2FsIGJhc2tldEJhbGwNCglpZiBwbGF5ZXIuUGxheWVyU2NyaXB0cy5QbGF5ZXJGbGFncy5wbGF5aW5nU29jY2VyLlZhbHVlIHRoZW4NCgkJcHJpbnQoIlBsYXlpbmcgc3Bhd24gc29jY2VyYmFsbHRvb2xuZXciKQ0KCQliYXNrZXRCYWxsID0gU2VydmVyU3RvcmFnZS5Tb2NjZXJCYWxsVG9vbE5ldzpDbG9uZShXb3JrU3BhY2UpIC0tY29weSB0aGUgYmFza2V0YmFsbCB0b29sLi4uDQoJZWxzZQ0KCQlwcmludCgiTm90IHBsYXlpbmcgc3Bhd24gYmFza2V0YmFsbCIpDQoJCWJhc2tldEJhbGwgPSBTZXJ2ZXJTdG9yYWdlLkJhc2tldEJhbGxUb29sOkNsb25lKFdvcmtTcGFjZSkgLS1jb3B5IHRoZSBiYXNrZXRiYWxsIHRvb2wuLi4NCgllbmQNCgkNCgktLXByaW50KHBsYXllci5HYW1lVUkuVWlQYW5lbC5TY29yZVRleHQuVGV4dCkNCgktLWxvY2FsIGJhc2tldEJhbGwgPSBTZXJ2ZXJTdG9yYWdlLkJhc2tldEJhbGxUb29sOkNsb25lKFdvcmtTcGFjZSkgLS1jb3B5IHRoZSBiYXNrZXRiYWxsIHRvb2wuLi4NCglsb2NhbCBiYWxsUG9zaXRpb25Ib2xkZXIgPSBiYXNrZXRCYWxsOldhaXRGb3JDaGlsZCgiSG9vayIpIC0tZ2V0cyB0aGUgaG9vay90cmFuc2Zvcm1hdGlvbiBob2xkZXIgcmVmZXJlbmNlDQoJDQoJYmFsbFBvc2l0aW9uSG9sZGVyLlBvc2l0aW9uID0gc3RhcnRCYXNrZXRCYWxsUG9pbnQNCgliYWxsUG9zaXRpb25Ib2xkZXIuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCgliYWxsUG9zaXRpb25Ib2xkZXIuVmVsb2NpdHkgPSBmcHNQbGF5ZXJGb3J3YXJkICogc3BlZWQNCg0KICAgIGxhc3RUaHJvd25CeSA9IGJhc2tldEJhbGw6V2FpdEZvckNoaWxkKCJMYXN0VGhyb3duQnlJRCIpDQoJbGFzdFRocm93bkJ5LlZhbHVlID0gcGxheWVySWQNCglsb2NhbCB0aHJvd2VyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChsYXN0VGhyb3duQnkuVmFsdWUpDQoJDQoJdG9vbDpEZXN0cm95KCkgLS0gRGVzdHJveSB0aGUgdG9vbCBoZWxkIGluIHRoZSBoYW5kcy9iYWNrcGFjaw0KCQ0KCS0tW1sNCgl0aGVTY3JpcHQgPSBTZXJ2ZXJTdG9yYWdlOldhaXRGb3JDaGlsZCgnQ3VzdG9tU2VydmVyTW9kdWxlU2NyaXB0JykNCglpZiB0aGVTY3JpcHQgfj0gbmlsIHRoZW4NCgkJcHJpbnQodGhlU2NyaXB0KQ0KCQl0aGVTY3JpcHQuQ2FsbFNwZWNpZmljRnVuY3Rpb24oKQ0KCWVsc2UNCgkJcHJpbnQoJ25pbCBzY3JpcHQuLi4nKQ0KCWVuZA0KDQoJDQoJLS1wcmludCgiQmFza2V0QmFsbCB3YXMgbGFzdCB0aHJvd24gYnkgIiAuLiB0aHJvd2VyLk5hbWUpDQogICAgLS1uZXdCYWxsLkhvb2tQYXJ0LlBvc2l0aW9uID0gc3RhcnRCYXNrZXRCYWxsUG9pbnQNCgktLW5ld0JhbGwuSG9va1BhcnQuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCgktLW5ld0JhbGwuSG9va1BhcnQuVmVsb2NpdHkgPSBmcHNQbGF5ZXJGb3J3YXJkICogc3BlZWQNCg0KCWxvY2FsIHBhcnQgPSBSV09iamVjdDpOZXcoJ1BhcnQnKQ0KCQ0KCWxvY2FsIHNwZWNpYWxNZXNoID0gUldPYmplY3Q6TmV3KCdTcGVjaWFsTWVzaCcpDQoJDQoJc3BlY2lhbE1lc2guUGFyZW50ID0gcGFydA0KCXNwZWNpYWxNZXNoLlBvc2l0aW9uID0gVmVjdG9yMy56ZXJvOw0KCXBhcnQuUG9zaXRpb24gPSBzdGFydEJhc2tldEJhbGxQb2ludA0KCXNwZWNpYWxNZXNoLk1lc2hJZCA9IHRvb2wuSG9vay5TcGVjaWFsTWVzaC5NZXNoSWQNCglzcGVjaWFsTWVzaC5Vc2VUeXBlID0gRW51bS5TcGVjaWFsTWVzaFR5cGUuRmlsZU1lc2gNCglzcGVjaWFsTWVzaC5UZXh0dXJlSWQgPSB0b29sLkhvb2suU3BlY2lhbE1lc2guVGV4dHVyZUlkDQoJdG9vbC5Ib29rWyJFeHBsb3Npb25Tb3VuZCJdLlBhcmVudCA9IHBhcnQNCglwYXJ0LlBhcmVudCA9IFdvcmtTcGFjZQ0KDQoJcGFydDpTZXROZXR3b3JrT3duZXIobmlsKQ0KCQ0KCXBhcnQuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCglwYXJ0LlZlbG9jaXR5ID0gZnBzUGxheWVyRm9yd2FyZCAqIHNwZWVkDQoJDQoJc2VsZi5QYXJ0ID0gcGFydA0KCXRvb2w6RGVzdHJveSgpLS1dXQ0KCQ0KCXJldHVybiBzZWxmDQplbmQNCmZ1bmN0aW9uIE1pc3NpbGU6VXBkYXRlKGRlbHRhKQ0KCWlmIHNlbGYuQmFza2V0QmFsbFN5c3RlbSA9PSBuaWwgdGhlbg0KCQlyZXR1cm4NCgllbmQJDQoJLS1bWw0KCWlmIHNlbGYuU3RhdHVzID09ICJXYWl0RXhwbG9zaW9uIiB0aGVuDQoJCWlmIHNlbGYuVGltZSA+IEVGRkVDVFNUSU1FICsgREVMQVlUSU1FIHRoZW4NCgkJCXNlbGYuU3RhdHVzID0gIkV4cGxvc2lvbiINCgkJCWlmIG5vdCBzZWxmLlBhcnQ6QXZhaWxhYmxlKCkgb3Igc2VsZi5QYXJ0LlBvc2l0aW9uID09IG5pbCB0aGVuIHJldHVybiBlbmQNCgkJCWxvY2FsIHN0YXJ0UG9zID0gVmVjdG9yMy5OZXcoc2VsZi5QYXJ0LlBvc2l0aW9uLnggLSBESVNUQU5DRSwgc2VsZi5QYXJ0LlBvc2l0aW9uLnkgLSBESVNUQU5DRSwgc2VsZi5QYXJ0LlBvc2l0aW9uLnogLSBESVNUQU5DRSkNCgkJCWxvY2FsIGVuZFBvcyA9IFZlY3RvcjMuTmV3KHNlbGYuUGFydC5Qb3NpdGlvbi54ICsgRElTVEFOQ0UsIHNlbGYuUGFydC5Qb3NpdGlvbi55ICsgRElTVEFOQ0UsIHNlbGYuUGFydC5Qb3NpdGlvbi56ICsgRElTVEFOQ0UpDQoJCQlsb2NhbCBpbnRlclRhYmxlID0gV29ya1NwYWNlOkZpbmRQYXJ0c0luWm9uZShzdGFydFBvcywgZW5kUG9zLCBuaWwsIDEwMDApDQoJCQlsb2NhbCBoaXRQbGF5ZXIgPSBuaWwNCgkJCWlmIGludGVyVGFibGUgfj0gbmlsIHRoZW4NCgkJCQlmb3Igayx2IGluIHBhaXJzKGludGVyVGFibGUpIGRvDQoJCQkJCWlmIHYuQ2xhc3NOYW1lID09ICJBdmF0YXIiIHRoZW4NCgkJCQkJCWxvY2FsIGhlYWx0aCA9IHYuSGVhbHRoDQoJCQkJCQl2OlRha2VEYW1hZ2UoSEVBTFRIKQ0KCQkJCQkJaWYgdi5QbGF5ZXJJZCB+PSBuaWwgdGhlbg0KCQkJCQkJCWhpdFBsYXllciA9IFBsYXllcnM6R2V0UGxheWVyQnlVc2VySWQodi5QbGF5ZXJJZCkNCgkJCQkJCWVuZA0KCQkJCQkJaWYgc2VsZi5QbGF5ZXIuVGVhbSB+PSBuaWwgYW5kIGhpdFBsYXllciB+PSBuaWwgYW5kIGhpdFBsYXllci5UZWFtIH49IG5pbCB0aGVuDQoJCQkJCQkJaWYgc2VsZi5QbGF5ZXIuVGVhbS5UZWFtSWQgfj0gaGl0UGxheWVyLlRlYW0uVGVhbUlkIHRoZW4NCgkJCQkJCQkJaWYgdi5IZWFsdGggPD0gMCBhbmQgaGVhbHRoID4gMCB0aGVuDQoJCQkJCQkJCQlCYXNrZXRCYWxsU3lzdGVtLkV2ZW50T2JqZWN0c1siS2lsbCJdOkZpcmVMb2NhbFNlcnZlcihzZWxmLlBsYXllciwgaGl0UGxheWVyKQ0KCQkJCQkJCQkJDQoJCQkJCQkJCWVsc2UNCgkJCQkJCQkJCUJhc2tldEJhbGxTeXN0ZW0uRXZlbnRPYmplY3RzWyJIaXQiXTpGaXJlTG9jYWxTZXJ2ZXIoc2VsZi5QbGF5ZXIsIGhpdFBsYXllciwgSEVBTFRIKQ0KCQkJCQkJCQllbmQNCgkJCQkJCQllbmQNCgkJCQkJCWVuZA0KCQkJCQllbmQNCgkJCQllbmQJDQoJCQllbmQNCgkJCXNlbGYuUGFydC5DYW5Db2xsaWRlID0gZmFsc2UNCgkJCXNlbGYuUGFydC5BbmNob3JlZCA9IHRydWUNCgkJCXNlbGYuUGFydFsiRXhwbG9zaW9uU291bmQiXTpQbGF5KCkNCgkJCXNlbGYuUGFydC5UcmFuc3BhcmVuY3kgPSAwDQoJCQkNCgkJCWxvY2FsIGV4ID0gUldPYmplY3Q6TmV3KCJFeHBsb3Npb24iKQ0KCQkJZXguRXhwbG9zaW9uRm9yY2UgPSAxMDAwMA0KCQkJZXguRXhwbG9zaW9uUmFkaXVzID0gMw0KCQkJZXguQ29uc3RyYWludCA9IHRydWUNCgkJCWV4LkV4cGxvc2lvblBvc2l0aW9uID0gc2VsZi5QYXJ0LlBvc2l0aW9uDQoJCQlleC5IaXQ6Q29ubmVjdChmdW5jdGlvbihvYmosIGRpc3RhbmNlKSANCgkJCQkJbG9jYWwgYXZhdGFyID0gb2JqOkdldEFuY2VzdG9yQnlDbGFzc05hbWUoIkF2YXRhciIpDQoJCQkJCWxvY2FsIHRvb2wgPSBvYmo6R2V0QW5jZXN0b3JCeUNsYXNzTmFtZSgiVG9vbCIpDQoJCQkJCWlmIGF2YXRhciA9PSBuaWwgYW5kIHRvb2wgPT0gbmlsIGFuZCBvYmouQW5jaG9yZWQgPT0gZmFsc2UgdGhlbg0KCQkJCQkJR2V0U2VydmljZSgiVXRpbFNlcnZpY2UiKTpEZWxheURlc3Ryb3kob2JqLCA1KQ0KCQkJCQllbmQNCgkJCQllbmQpDQoJCQlleC5QYXJlbnQgPSBzZWxmLlBhcnQNCgkJCQ0KCQkJc2VsZi5UaW1lID0gMA0KCQllbmQNCgllbHNlaWYgc2VsZi5TdGF0dXMgPT0gIkV4cGxvc2lvbiIgdGhlbg0KCQlpZiBzZWxmLlRpbWUgPj0gMyB0aGVuDQoJCQlzZWxmLlBhcnQ6RGVzdHJveSgpDQoJCQlHYW1lUnVuLlVwZGF0ZTpEaXNDb25uZWN0KHNlbGYuVXBkYXRlSGFuZGxlKQ0KCQllbmQNCgllbmQNCglzZWxmLlRpbWUgPSBzZWxmLlRpbWUgKyBkZWx0YSAtLV1dDQplbmQNCg0KcmV0dXJuIE1pc3NpbGU=
a088afeabac3cb81dfe40b9797c4edc1|
e40ee23d4ca1f1e0964f77960f624816|
49ef49b5682b679485320c4288f562ad|bG9jYWwgTWlzc2lsZSA9IHt9DQpsb2NhbCBESVNUQU5DRSA9IDMgLS0g6IyD5Zu0DQpsb2NhbCBIRUFMVEggPSAyMDAtLSDkvKTlrrMNCmxvY2FsIFRJTUUgPSAzCS0tIOeIhueCuOaXtumXtCjml6DmlYjvvIzniIbngrjlnKjnibnmlYjml7bpl7TlkI4xc+WQjuaJp+ihjCkNCmxvY2FsIEVGRkVDVFNUSU1FID0gMC41IC0tIOeJueaViOaXtumXtA0KbG9jYWwgREVMQVlUSU1FID0gMi41IC0tIOeJueaViOaXtumXtOS5i+WQjueahOW7tuaXtueIhueCuOaXtumXtA0KDQoNCk1pc3NpbGUuX19pbmRleCA9IE1pc3NpbGUNCmZ1bmN0aW9uIE1pc3NpbGUuTmV3KHBsYXllcklkLCB0b29sLCBhbmdsZVosIHNwZWVkLCByeCwgcnksIHJ6LCBweCwgcHksIHB6LCBiYXNrZXRCYWxsU3lzdGVtKQ0KCWxvY2FsIHNlbGYgPSBzZXRtZXRhdGFibGUoe30sIE1pc3NpbGUpDQoJc2VsZi5TdGF0dXMgPSAiV2FpdEV4cGxvc2lvbiINCglzZWxmLlRpbWUgPSAwDQoJc2VsZi5CYXNrZXRCYWxsU3lzdGVtID0gYmFza2V0QmFsbFN5c3RlbQ0KCQ0KCWxvY2FsIGZ1bmN0aW9uIGhhbmRsZXIob2JqLCBtZXRob2QpDQoJCXJldHVybiBmdW5jdGlvbiguLi4pDQoJCQlyZXR1cm4gbWV0aG9kKG9iaiwgLi4uKQ0KCQllbmQNCgllbmQNCgkNCglzZWxmLlVwZGF0ZUhhbmRsZSA9IGhhbmRsZXIoc2VsZiwgc2VsZi5VcGRhdGUpDQoJR2FtZVJ1bi5VcGRhdGU6Q29ubmVjdChzZWxmLlVwZGF0ZUhhbmRsZSkNCg0KCXNlbGYuUGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChwbGF5ZXJJZCkNCgktLWJhc2tldEJhbGwuSG9va1siVGhyb3cgU291bmQiXS5Qb3NpdGlvbiA9IGJhc2tldEJhbGwuSG9vay5Qb3NpdGlvbg0KCS0tYmFza2V0QmFsbC5Ib29rWyJUaHJvdyBTb3VuZCJdOlBsYXkoKQ0KCQ0KLS0JcHJpbnQoIuaSreaUvuaKleaOt+mfs+aViCIpDQoJbG9jYWwgZnBzUGxheWVyUm90YXRpb24gPSBRdWF0ZXJuaW9uLkV1bGVyKC1hbmdsZVosIHJ5LCByeikNCglsb2NhbCBmcHNQbGF5ZXJGb3J3YXJkID0gUXVhdGVybmlvbi5FdWxlcigtYW5nbGVaLCByeSwgcnopICogVmVjdG9yMy5mb3J3YXJkDQoJbG9jYWwgZnBzUGxheWVyUmlnaHQgPSBRdWF0ZXJuaW9uLkV1bGVyKC1hbmdsZVosIHJ5LCByeikgKiBWZWN0b3IzLnJpZ2h0DQoJbG9jYWwgc3RhcnRCYXNrZXRCYWxsUG9pbnQgPSBWZWN0b3IzLk5ldyhweCwgcHksIHB6KTsNCg0KDQogICAgLS1DcmVhdGUgYSBuZXcgYmFza2V0YmFsbCB0b2wgYW5kIG1ha2UgdGhlIG5ldyB0b29sIHRoZSBtaXNzbGUgKFRocm93IHdoYXQgeW91IGNhbiBwaWNrIHVwIGFnYWluKQ0KCWxvY2FsIGJhc2tldEJhbGwgPSBTZXJ2ZXJTdG9yYWdlLkJhc2tldEJhbGxUb29sOkNsb25lKFdvcmtTcGFjZSkgLS1jb3B5IHRoZSBiYXNrZXRiYWxsIHRvb2wuLi4NCglsb2NhbCBiYWxsUG9zaXRpb25Ib2xkZXIgPSBiYXNrZXRCYWxsOldhaXRGb3JDaGlsZCgiSG9vayIpIC0tZ2V0cyB0aGUgaG9vay90cmFuc2Zvcm1hdGlvbiBob2xkZXIgcmVmZXJlbmNlDQoJDQoJYmFsbFBvc2l0aW9uSG9sZGVyLlBvc2l0aW9uID0gc3RhcnRCYXNrZXRCYWxsUG9pbnQNCgliYWxsUG9zaXRpb25Ib2xkZXIuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCgliYWxsUG9zaXRpb25Ib2xkZXIuVmVsb2NpdHkgPSBmcHNQbGF5ZXJGb3J3YXJkICogc3BlZWQNCg0KICAgIGxhc3RUaHJvd25CeSA9IGJhc2tldEJhbGw6V2FpdEZvckNoaWxkKCJMYXN0VGhyb3duQnlJRCIpDQoJbGFzdFRocm93bkJ5LlZhbHVlID0gcGxheWVySWQNCglsb2NhbCB0aHJvd2VyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChsYXN0VGhyb3duQnkuVmFsdWUpDQoJDQoJdG9vbDpEZXN0cm95KCkgLS0gRGVzdHJveSB0aGUgdG9vbCBoZWxkIGluIHRoZSBoYW5kcy9iYWNrcGFjaw0KCQ0KCS0tW1sNCgl0aGVTY3JpcHQgPSBTZXJ2ZXJTdG9yYWdlOldhaXRGb3JDaGlsZCgnQ3VzdG9tU2VydmVyTW9kdWxlU2NyaXB0JykNCglpZiB0aGVTY3JpcHQgfj0gbmlsIHRoZW4NCgkJcHJpbnQodGhlU2NyaXB0KQ0KCQl0aGVTY3JpcHQuQ2FsbFNwZWNpZmljRnVuY3Rpb24oKQ0KCWVsc2UNCgkJcHJpbnQoJ25pbCBzY3JpcHQuLi4nKQ0KCWVuZA0KDQoJDQoJLS1wcmludCgiQmFza2V0QmFsbCB3YXMgbGFzdCB0aHJvd24gYnkgIiAuLiB0aHJvd2VyLk5hbWUpDQogICAgLS1uZXdCYWxsLkhvb2tQYXJ0LlBvc2l0aW9uID0gc3RhcnRCYXNrZXRCYWxsUG9pbnQNCgktLW5ld0JhbGwuSG9va1BhcnQuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCgktLW5ld0JhbGwuSG9va1BhcnQuVmVsb2NpdHkgPSBmcHNQbGF5ZXJGb3J3YXJkICogc3BlZWQNCg0KCWxvY2FsIHBhcnQgPSBSV09iamVjdDpOZXcoJ1BhcnQnKQ0KCQ0KCWxvY2FsIHNwZWNpYWxNZXNoID0gUldPYmplY3Q6TmV3KCdTcGVjaWFsTWVzaCcpDQoJDQoJc3BlY2lhbE1lc2guUGFyZW50ID0gcGFydA0KCXNwZWNpYWxNZXNoLlBvc2l0aW9uID0gVmVjdG9yMy56ZXJvOw0KCXBhcnQuUG9zaXRpb24gPSBzdGFydEJhc2tldEJhbGxQb2ludA0KCXNwZWNpYWxNZXNoLk1lc2hJZCA9IHRvb2wuSG9vay5TcGVjaWFsTWVzaC5NZXNoSWQNCglzcGVjaWFsTWVzaC5Vc2VUeXBlID0gRW51bS5TcGVjaWFsTWVzaFR5cGUuRmlsZU1lc2gNCglzcGVjaWFsTWVzaC5UZXh0dXJlSWQgPSB0b29sLkhvb2suU3BlY2lhbE1lc2guVGV4dHVyZUlkDQoJdG9vbC5Ib29rWyJFeHBsb3Npb25Tb3VuZCJdLlBhcmVudCA9IHBhcnQNCglwYXJ0LlBhcmVudCA9IFdvcmtTcGFjZQ0KDQoJcGFydDpTZXROZXR3b3JrT3duZXIobmlsKQ0KCQ0KCXBhcnQuUm90YXRpb24gPSBmcHNQbGF5ZXJSb3RhdGlvbjpUb0V1bGVyQW5nbGVzKCkNCglwYXJ0LlZlbG9jaXR5ID0gZnBzUGxheWVyRm9yd2FyZCAqIHNwZWVkDQoJDQoJc2VsZi5QYXJ0ID0gcGFydA0KCXRvb2w6RGVzdHJveSgpLS1dXQ0KCQ0KCXJldHVybiBzZWxmDQplbmQNCmZ1bmN0aW9uIE1pc3NpbGU6VXBkYXRlKGRlbHRhKQ0KCWlmIHNlbGYuQmFza2V0QmFsbFN5c3RlbSA9PSBuaWwgdGhlbg0KCQlyZXR1cm4NCgllbmQJDQoJLS1bWw0KCWlmIHNlbGYuU3RhdHVzID09ICJXYWl0RXhwbG9zaW9uIiB0aGVuDQoJCWlmIHNlbGYuVGltZSA+IEVGRkVDVFNUSU1FICsgREVMQVlUSU1FIHRoZW4NCgkJCXNlbGYuU3RhdHVzID0gIkV4cGxvc2lvbiINCgkJCWlmIG5vdCBzZWxmLlBhcnQ6QXZhaWxhYmxlKCkgb3Igc2VsZi5QYXJ0LlBvc2l0aW9uID09IG5pbCB0aGVuIHJldHVybiBlbmQNCg0KCQkJbG9jYWwgc3RhcnRQb3MgPSBWZWN0b3IzLk5ldyhzZWxmLlBhcnQuUG9zaXRpb24ueCAtIERJU1RBTkNFLCBzZWxmLlBhcnQuUG9zaXRpb24ueSAtIERJU1RBTkNFLCBzZWxmLlBhcnQuUG9zaXRpb24ueiAtIERJU1RBTkNFKQ0KCQkJbG9jYWwgZW5kUG9zID0gVmVjdG9yMy5OZXcoc2VsZi5QYXJ0LlBvc2l0aW9uLnggKyBESVNUQU5DRSwgc2VsZi5QYXJ0LlBvc2l0aW9uLnkgKyBESVNUQU5DRSwgc2VsZi5QYXJ0LlBvc2l0aW9uLnogKyBESVNUQU5DRSkNCgkJCWxvY2FsIGludGVyVGFibGUgPSBXb3JrU3BhY2U6RmluZFBhcnRzSW5ab25lKHN0YXJ0UG9zLCBlbmRQb3MsIG5pbCwgMTAwMCkNCgkJCWxvY2FsIGhpdFBsYXllciA9IG5pbA0KCQkJaWYgaW50ZXJUYWJsZSB+PSBuaWwgdGhlbg0KCQkJCWZvciBrLHYgaW4gcGFpcnMoaW50ZXJUYWJsZSkgZG8NCgkJCQkJaWYgdi5DbGFzc05hbWUgPT0gIkF2YXRhciIgdGhlbg0KCQkJCQkJbG9jYWwgaGVhbHRoID0gdi5IZWFsdGgNCgkJCQkJCXY6VGFrZURhbWFnZShIRUFMVEgpDQoJCQkJCQlpZiB2LlBsYXllcklkIH49IG5pbCB0aGVuDQoJCQkJCQkJaGl0UGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZCh2LlBsYXllcklkKQ0KCQkJCQkJZW5kDQoNCgkJCQkJCWlmIHNlbGYuUGxheWVyLlRlYW0gfj0gbmlsIGFuZCBoaXRQbGF5ZXIgfj0gbmlsIGFuZCBoaXRQbGF5ZXIuVGVhbSB+PSBuaWwgdGhlbg0KCQkJCQkJCWlmIHNlbGYuUGxheWVyLlRlYW0uVGVhbUlkIH49IGhpdFBsYXllci5UZWFtLlRlYW1JZCB0aGVuDQoJCQkJCQkJCWlmIHYuSGVhbHRoIDw9IDAgYW5kIGhlYWx0aCA+IDAgdGhlbg0KCQkJCQkJCQkJQmFza2V0QmFsbFN5c3RlbS5FdmVudE9iamVjdHNbIktpbGwiXTpGaXJlTG9jYWxTZXJ2ZXIoc2VsZi5QbGF5ZXIsIGhpdFBsYXllcikNCgkJCQkJCQkJCQ0KCQkJCQkJCQllbHNlDQoJCQkJCQkJCQlCYXNrZXRCYWxsU3lzdGVtLkV2ZW50T2JqZWN0c1siSGl0Il06RmlyZUxvY2FsU2VydmVyKHNlbGYuUGxheWVyLCBoaXRQbGF5ZXIsIEhFQUxUSCkNCgkJCQkJCQkJZW5kDQoJCQkJCQkJZW5kDQoJCQkJCQllbmQNCgkJCQkJZW5kDQoJCQkJZW5kCQ0KCQkJZW5kDQoJCQlzZWxmLlBhcnQuQ2FuQ29sbGlkZSA9IGZhbHNlDQoJCQlzZWxmLlBhcnQuQW5jaG9yZWQgPSB0cnVlDQoJCQlzZWxmLlBhcnRbIkV4cGxvc2lvblNvdW5kIl06UGxheSgpDQoNCgkJCXNlbGYuUGFydC5UcmFuc3BhcmVuY3kgPSAwDQoJCQkNCgkJCWxvY2FsIGV4ID0gUldPYmplY3Q6TmV3KCJFeHBsb3Npb24iKQ0KCQkJZXguRXhwbG9zaW9uRm9yY2UgPSAxMDAwMA0KCQkJZXguRXhwbG9zaW9uUmFkaXVzID0gMw0KCQkJZXguQ29uc3RyYWludCA9IHRydWUNCgkJCWV4LkV4cGxvc2lvblBvc2l0aW9uID0gc2VsZi5QYXJ0LlBvc2l0aW9uDQoNCgkJCWV4LkhpdDpDb25uZWN0KGZ1bmN0aW9uKG9iaiwgZGlzdGFuY2UpIA0KCQkJCQlsb2NhbCBhdmF0YXIgPSBvYmo6R2V0QW5jZXN0b3JCeUNsYXNzTmFtZSgiQXZhdGFyIikNCgkJCQkJbG9jYWwgdG9vbCA9IG9iajpHZXRBbmNlc3RvckJ5Q2xhc3NOYW1lKCJUb29sIikNCgkJCQkJaWYgYXZhdGFyID09IG5pbCBhbmQgdG9vbCA9PSBuaWwgYW5kIG9iai5BbmNob3JlZCA9PSBmYWxzZSB0aGVuDQoJCQkJCQlHZXRTZXJ2aWNlKCJVdGlsU2VydmljZSIpOkRlbGF5RGVzdHJveShvYmosIDUpDQoJCQkJCWVuZA0KCQkJCWVuZCkNCgkJCWV4LlBhcmVudCA9IHNlbGYuUGFydA0KCQkJDQoJCQlzZWxmLlRpbWUgPSAwDQoJCWVuZA0KCWVsc2VpZiBzZWxmLlN0YXR1cyA9PSAiRXhwbG9zaW9uIiB0aGVuDQoJCWlmIHNlbGYuVGltZSA+PSAzIHRoZW4NCgkJCXNlbGYuUGFydDpEZXN0cm95KCkNCgkJCUdhbWVSdW4uVXBkYXRlOkRpc0Nvbm5lY3Qoc2VsZi5VcGRhdGVIYW5kbGUpDQoJCWVuZA0KCWVuZA0KCXNlbGYuVGltZSA9IHNlbGYuVGltZSArIGRlbHRhIC0tXV0NCmVuZA0KDQpyZXR1cm4gTWlzc2lsZQ==
6e0a27165d9066255d00d62aaa3355f2|LS1sb2NhbCBzY29yZVVJID0gc2NyaXB0LlNjb3JlVGV4dA0KbG9jYWwgc2NvcmVVSSA9IHNjcmlwdC5QYXJlbnQNCmxvY2FsIHNjb3JlVGV4dCA9IHNjb3JlVUk6V2FpdEZvckNoaWxkKCJTY29yZVRleHQiKQ0KbG9jYWwgZnVuY3Rpb24gUGxheWVyU2NvcmVNb2RpZmVkRXZlbnRDYWxsQmFjayhwbGF5ZXJJZCwgc2NvcmUpDQoJbG9jYWwgcGxheWVyID0gUGxheWVyczpHZXRMb2NhbFBsYXllcigpDQoJaWYgcGxheWVyLlVpZCA9PSBwbGF5ZXJJZCB0aGVuDQoJCXNjb3JlVGV4dC5UZXh0ID0gIlNjb3JlOiIgLi4gc2NvcmUNCgllbmQNCmVuZA0KDQpNZXNzYWdlRXZlbnQuQ2xpZW50RXZlbnRDYWxsQmFjaygiUGxheWVyU2NvcmVNb2RpZmVkRXZlbnQiKTpDb25uZWN0KFBsYXllclNjb3JlTW9kaWZlZEV2ZW50Q2FsbEJhY2sp
b3922b9fea58c0c4b7d786f70171802a|bG9jYWwgbGV2ZWxVSSA9IHNjcmlwdC5QYXJlbnQuTGV2ZWxUZXh0DQpsb2NhbCBmdW5jdGlvbiBQbGF5ZXJMZXZlbE1vZGlmZWRFdmVudENhbGxCYWNrKHBsYXllcklkLCBzY29yZSkNCglsb2NhbCBwbGF5ZXIgPSBQbGF5ZXJzOkdldExvY2FsUGxheWVyKCkNCglpZiBwbGF5ZXIuVWlkID09IHBsYXllcklkIHRoZW4NCgkJbGV2ZWxVSS5UZXh0ID0gIkxldmVsOiIgLi4gc2NvcmUNCgllbmQNCmVuZA0KDQpNZXNzYWdlRXZlbnQuQ2xpZW50RXZlbnRDYWxsQmFjaygiUGxheWVyTGV2ZWxNb2RpZmVkRXZlbnQiKTpDb25uZWN0KFBsYXllckxldmVsTW9kaWZlZEV2ZW50Q2FsbEJhY2sp
a3f923cc88ef1b01fc0f3419efd76ec7|bG9jYWwgYm9hcmRQYXJlbnQgPSBzY3JpcHQuUGFyZW50DQoNCmxvY2FsIGZ1bmN0aW9uIFNob3dTVUlFdmVudENhbGxCYWNrKHBsYXllcklELCBzaG93KQ0KCWxvY2FsIHBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KCWlmIHBsYXllci5VaWQgPT0gcGxheWVySUQgdGhlbg0KCQlib2FyZFBhcmVudC5Jc1Zpc2libGUgPSBzaG93DQoJZW5kCQ0KZW5kDQoNCk1lc3NhZ2VFdmVudC5DbGllbnRFdmVudENhbGxCYWNrKCJTaG93U29jY2VyVUlFdmVudCIpOkNvbm5lY3QoU2hvd1NVSUV2ZW50Q2FsbEJhY2sp
876d8bc42e11d8f34c33ffc40b624a07|
2ed8cec05b8162e3d27093116bbcdb94|
42da54b6b804e56dcff14de25845880f|
f0a1a8cdb77e293ca74b84fa24766a62|
f508a3c980cbc4be085040c698694d20|bG9jYWwgbGVhcFBhbmVsID0gUldPYmplY3Q6TmV3KCJVaVBhbmVsIikNCmxlYXBQYW5lbC5OYW1lID0gIkxlYXAiDQoNCmxlYXBQYW5lbC5Cb3JkZXIgPSBWZWN0b3I0Lk5ldygwLjEsIDAuMSwgMC41LCAwLjUpDQpsZWFwUGFuZWwuSW1hZ2VDb2xvckEgPSAxDQpsZWFwUGFuZWwuSW1hZ2VDdXJUeXBlID0gRW51bS5VSUltYWdlVHlwZS5TaW1wbGUNCmxlYXBQYW5lbC5Tb3VyY2VJbWFnZSA9ICJyd2lkOi8vVDF3eV9UQnZkVDFSQ3ZCVmRLIg0KDQpsZWFwUGFuZWwuQW5jaG9yZWRQb3NpdGlvbiA9IFZlY3RvcjIuTmV3KC0xMDEuMCwgMTAxLjApDQpsZWFwUGFuZWwuQW5jaG9yTWluID0gVmVjdG9yMi5OZXcoMS4wLCAwLjApDQpsZWFwUGFuZWwuT2Zmc2V0TWF4ID0gVmVjdG9yMi5vbmUNCmxlYXBQYW5lbC5PZmZzZXRNaW4gPSBWZWN0b3IyLk5ldygtMjMyLjAsIDEwMS4wKQ0KbGVhcFBhbmVsLlBpdm90ID0gVmVjdG9yMi5OZXcoMS4wLCAwLjApDQotLSBsZWFwUGFuZWwuUG9zaXRpb24gPSBWZWN0b3IzLk5ldygxNTU3LjcsIDIxMi4wLCAwLjApDQpsZWFwUGFuZWwuU2l6ZURlbHRhID0gVmVjdG9yMi5OZXcoMTMxLjAsIDEzMS4wKQ0KbGVhcFBhbmVsLklzVmlzaWJsZSA9IGZhbHNlDQpsZWFwUGFuZWwuWkluZGV4ID0gMTUNCmxlYXBQYW5lbC5SZWxhdGl2ZVNpemUgPSBWZWN0b3IyLnplcm8NCmxlYXBQYW5lbC5BbmNob3JNYXggPSBWZWN0b3IyLk5ldygxLjAsIDAuMCkNCg0KbG9jYWwgbGVhcEJ1dHRvbiA9IFJXT2JqZWN0Ok5ldygiVWlCdXR0b24iLCBsZWFwUGFuZWwpDQpsZWFwQnV0dG9uLk5hbWUgPSAiTGVhcCINCg0KbGVhcEJ1dHRvbi5EaXNhYmxlZENvbG9yID0gVmVjdG9yMy5OZXcoMjU1LCAyNTUsIDI1NSkNCmxlYXBCdXR0b24uRGlzYWJsZWRDb2xvckEgPSAwLjUwMTk2MDgNCmxlYXBCdXR0b24uSGlnaGxpZ2h0ZWRDb2xvciA9IFZlY3RvcjMuTmV3KDI1NSwgMjU1LCAyNTUpDQpsZWFwQnV0dG9uLkhpZ2hsaWdodGVkQ29sb3JBID0gMA0KbGVhcEJ1dHRvbi5Ob3JtYWxDb2xvckEgPSAwDQpsZWFwQnV0dG9uLlByZXNzZWRDb2xvciA9IFZlY3RvcjMuTmV3KDI1NSwgMjU1LCAyNTUpDQpsZWFwQnV0dG9uLlByZXNzZWRDb2xvckEgPSAwDQpsZWFwQnV0dG9uLk9uQ2xpY2tFdmVudCA9ICJFdmVudEp1bXAiDQoNCmxlYXBCdXR0b24uQm9yZGVyID0gVmVjdG9yNC5OZXcoMC4xLCAwLjEsIDAuMSwgMC4xKQ0KbGVhcEJ1dHRvbi5JbWFnZUNvbG9yQSA9IDENCmxlYXBCdXR0b24uU291cmNlSW1hZ2UgPSAicndpZDovL1Qxd3lfVEJ2ZFQxUkN2QlZkSyINCg0KbGVhcEJ1dHRvbi5PZmZzZXRNYXggPSBWZWN0b3IyLm9uZQ0KbGVhcEJ1dHRvbi5PZmZzZXRNaW4gPSBWZWN0b3IyLk5ldygtMTE1LjAsIC0xMTUuMCkNCi0tIGxlYXBCdXR0b24uUG9zaXRpb24gPSBWZWN0b3IzLk5ldygxNTEzLjQsIDI1Ni4yLCAwLjApDQpsZWFwQnV0dG9uLlNpemVEZWx0YSA9IFZlY3RvcjIuTmV3KDIzMC4wLCAyMzAuMCkNCg0KbG9jYWwgYmFja2dyb3VuZCA9IFJXT2JqZWN0Ok5ldygiVWlJbWFnZSIsIGxlYXBCdXR0b24pDQpiYWNrZ3JvdW5kLk5hbWUgPSAiSnVtcCBCYWNrZ3JvdW5kIEltYWdlIg0KDQpiYWNrZ3JvdW5kLk9mZnNldE1heCA9IFZlY3RvcjIub25lDQpiYWNrZ3JvdW5kLk9mZnNldE1pbiA9IFZlY3RvcjIuTmV3KC02NS41LCAtNjUuNSkNCi0tIGJhY2tncm91bmQuUG9zaXRpb24gPSBWZWN0b3IzLk5ldygxNTEzLjQsIDI1Ni4yLCAxLjApDQpiYWNrZ3JvdW5kLlNpemVEZWx0YSA9IFZlY3RvcjIuTmV3KDEzMS4wLCAxMzEuMCkNCg0KYmFja2dyb3VuZC5JbWFnZUNvbG9yQSA9IDENCmJhY2tncm91bmQuU291cmNlSW1hZ2UgPSAicndpZDovL1QxdlJfVEI1TFQxUkN2QlZkSyINCg0KbG9jYWwgbm9ybWFsID0gUldPYmplY3Q6TmV3KCJVaUltYWdlIiwgbGVhcEJ1dHRvbikNCm5vcm1hbC5OYW1lID0gIkp1bXAgTm9ybWFsIg0KDQpub3JtYWwuT2Zmc2V0TWF4ID0gVmVjdG9yMi5vbmUNCm5vcm1hbC5PZmZzZXRNaW4gPSBWZWN0b3IyLk5ldygtMjUuNSwgLTQ0LjApDQotLSBub3JtYWwuUG9zaXRpb24gPSBWZWN0b3IzLk5ldygxNTEzLjQsIDI1Ni4yLCAwLjApDQpub3JtYWwuU2l6ZURlbHRhID0gVmVjdG9yMi5OZXcoNTEuMCwgODguMCkNCm5vcm1hbC5aSW5kZXggPSAxDQoNCm5vcm1hbC5JbWFnZUNvbG9yQSA9IDENCm5vcm1hbC5JZ25vcmVSYXlDYXN0ID0gdHJ1ZQ0Kbm9ybWFsLlNvdXJjZUltYWdlID0gInJ3aWQ6Ly9UMTl5X1RCVGRUMVJDdkJWZEsiDQoNCmxvY2FsIHByZXNzZWQgPSBSV09iamVjdDpOZXcoIlVpSW1hZ2UiLCBsZWFwQnV0dG9uKQ0KcHJlc3NlZC5OYW1lID0gIkp1bXAgUHJlc3NlZCINCg0KcHJlc3NlZC5PZmZzZXRNYXggPSBWZWN0b3IyLm9uZQ0KcHJlc3NlZC5PZmZzZXRNaW4gPSBWZWN0b3IyLk5ldygtMjUuNSwgLTQ0LjApDQotLSBwcmVzc2VkLlBvc2l0aW9uID0gVmVjdG9yMy5OZXcoMTUxMy40LCAyNTYuMiwgMC4wKQ0KcHJlc3NlZC5TaXplRGVsdGEgPSBWZWN0b3IyLk5ldyg1MS4wLCA4OC4wKQ0KcHJlc3NlZC5Jc1Zpc2libGUgPSBmYWxzZQ0KcHJlc3NlZC5aSW5kZXggPSAyDQoNCnByZXNzZWQuSW1hZ2VDb2xvckEgPSAxDQpwcmVzc2VkLklnbm9yZVJheUNhc3QgPSB0cnVlDQpwcmVzc2VkLlNvdXJjZUltYWdlID0gInJ3aWQ6Ly9UMWd0X1RCNVZUMVJDdkJWZEsiDQoNCmxlYXBQYW5lbC5QYXJlbnQgPSBQbGF5ZXJzOkdldExvY2FsUGxheWVyKCk6V2FpdEZvckNoaWxkKCJHYW1lVUkiKQ0KDQpsb2NhbCB1aUJhc2UgPSBsZWFwUGFuZWwNCmxvY2FsIGp1bXBVaSA9IHVpQmFzZTpXYWl0Rm9yQ2hpbGQoIkxlYXAiKQ0KbG9jYWwgTGFzdFRpbWUgPSAwDQpsb2NhbCBJc0p1bXAgPSBmYWxzZQ0KaWYgR2FtZVJ1bi5HZXRQbGF0Rm9ybSgpID09IEVudW0uUnVudGltZVBsYXRmb3JtLldpbmRvd3MgdGhlbg0KCWp1bXBVaS5Jc1Zpc2libGUgPSBmYWxzZQ0KZWxzZQ0KCWp1bXBVaS5Jc1Zpc2libGUgPSB0cnVlDQplbmQNCg0KbG9jYWwgcGxheWVyID0gUGxheWVyczpHZXRMb2NhbFBsYXllcigpDQpsb2NhbCBhdmF0YXIgPSBuaWwNCmlmIHBsYXllciB+PSBuaWwgdGhlbg0KICAgIGF2YXRhciA9IHBsYXllci5BdmF0YXINCiAgICBpZiBhdmF0YXIgPT0gbmlsIHRoZW4NCiAgICAgICAgcGxheWVyLkF2YXRhckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24ob2JqKSBhdmF0YXIgPSBvYmogZW5kKQ0KICAgIGVuZA0KZW5kDQoNCmxvY2FsIGZ1bmN0aW9uIE9uRW50ZXJKdW1wVWkoKQ0KLS0JTWVzc2FnZUV2ZW50LkZpcmVMb2NhbEV2ZW50KFVzZXJJbnB1dFNlcnZpY2UuSnVtcFJlcXVpcmVkLkV2ZW50TmFtZSkNCglJc0p1bXAgPSB0cnVlDQplbmQNCmxvY2FsIGZ1bmN0aW9uIE9uRXhpdEp1bXAoKQ0KCQ0KCUlzSnVtcCA9IGZhbHNlDQplbmQNCg0KDQpqdW1wVWkuT25Qb2ludGVyRG93bjpDb25uZWN0KE9uRW50ZXJKdW1wVWkpDQpqdW1wVWkuT25Qb2ludGVyVXA6Q29ubmVjdChPbkV4aXRKdW1wKQ0KanVtcFVpLk9uUG9pbnRlckV4aXQ6Q29ubmVjdChPbkV4aXRKdW1wKQ0KDQpmdW5jdGlvbiBEb0p1bXAoKQ0KCWlmIG5vdCBJc0p1bXAgdGhlbiByZXR1cm4gZW5kDQoJaWYgbm90IHVpQmFzZS5Jc1Zpc2FibGUgdGhlbg0KCQlJc0p1bXAgPSBmYWxzZQ0KCQlyZXR1cm4NCgllbmQNCgkNCiAgICBpZiAgcGxheWVyIH49IG5pbCBhbmQgYXZhdGFyIH49IG5pbCB0aGVuDQogICAgICAgIGF2YXRhcjpKdW1wKCkNCiAgICBlbmQNCmVuZA0KR2FtZVJ1bi5GaXhlZFVwZGF0ZTpDb25uZWN0KGZ1bmN0aW9uKCkNCglEb0p1bXAoKQ0KCWlmIFVzZXJJbnB1dFNlcnZpY2UuR2V0QnV0dG9uKCJKdW1wIikgdGhlbg0KCQlNZXNzYWdlRXZlbnQuRmlyZUxvY2FsRXZlbnQoIkNoYXJhY3Rlcl9KdW1wIikNCi0tCQlNZXNzYWdlRXZlbnQuRmlyZUxvY2FsRXZlbnQoVXNlcklucHV0U2VydmljZS5FdmVudEp1bXAuRXZlbnROYW1lKQ0KLS0JCU1lc3NhZ2VFdmVudC5GaXJlTG9jYWxFdmVudChVc2VySW5wdXRTZXJ2aWNlLkp1bXBSZXF1aXJlZC5FdmVudE5hbWUpDQoJZW5kDQplbmQp
dfd091e9f1bf34130a4283870df304c0|
3e6c286adb3dfe4c9e3b607d1983da89|SW50ZWdyYWxQbGF0ZVN5c3RlbSA9IHt9DQoNCmZ1bmN0aW9uIEludGVncmFsUGxhdGVTeXN0ZW0uaW5pdCgpIC0tIOenr+WIhuamnOezu+e7n+WIneWni+WMlg0KICAgIE1lc3NhZ2VFdmVudDpTZXJ2ZXJFdmVudENhbGxCYWNrKCJDU19JbnRlZ3JhbFBsYXRlTGlzdCIpOkNvbm5lY3QoSW50ZWdyYWxQbGF0ZVN5c3RlbS5DU19JbnRlZ3JhbFBsYXRlTGlzdF9wcm9jZXNzKQ0KZW5kDQpmdW5jdGlvbiBJbnRlZ3JhbFBsYXRlU3lzdGVtLkNTX0ludGVncmFsUGxhdGVMaXN0X3Byb2Nlc3MoblBsYXllcklkKSAtLSDmnI3liqHlmajms6jlhoznmoTkuovku7YNCiAgICBsb2NhbCBzaG93VGVhbSA9IEdhbWVTZXR0aW5nLmlzVGVhbVNob3cgLS0g6I635Y+W5ri45oiP6K6+572u566h55CG5Zmo5LiL55qE5piv5ZCm5pi+56S66Zif5LyNDQogICAgbG9jYWwgaW50ZWdyYWxQbGF0ZUxpc3QgPSB7fSAtLSDnp6/liIbmppznmoTpm4blkIjooagNCiAgICAtLeaMiemYn+S8jQ0KICAgIGlmIHNob3dUZWFtIGFuZCB0YWJsZS5udW1zKFRlYW06R2V0VGVhbXMoKSkgPiAwIHRoZW4gLS0g5aaC5p6cIOaYvuekuumYn+S8jSDlubbkuJQg6Zif5LyN55qE5pWw6YeP5aSn5LqOIDANCiAgICAgICAgZm9yIGssdiBpbiBwYWlycyhUZWFtOkdldFRlYW1zKCkpIGRvIC0tIOmBjeWOhumYn+S8jQ0KICAgICAgICAgICAgLS3mt7vliqDpmJ/kvI3moIfnrb4NCiAgICAgICAgICAgIGxvY2FsIHRlYW1EYXRhID0ge30gLS0g6Zif5LyN5pWw5o2uDQogICAgICAgICAgICB0ZWFtRGF0YS50eXBlID0gMiAtLSBUZWFtDQogICAgICAgICAgICB0ZWFtRGF0YS5uYW1lID0gdi5OYW1lIC0tIOi1i+WAvOmYn+S8jeWQjeWtlw0KICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGludGVncmFsUGxhdGVMaXN0LCB0ZWFtRGF0YSkgLS0g5bCG6Zif5LyN5pWw5o2u5o+S5YWlIOenr+WIhuamnOeahOmbhuWQiOihqOS4rQ0KDQogICAgICAgICAgICBpZiB2LlBsYXllcnMgfj0gbmlsIHRoZW4gLS0g5aaC5p6c546p5a626ZuG5ZCI5LiN5Li656m6DQogICAgICAgICAgICAgICAgZm9yIGtleVBsYXllciwgdmFsdWVQbGF5ZXIgaW4gcGFpcnModi5QbGF5ZXJzKSBkbyAtLSDpgY3ljobnjqnlrrbpm4blkIgNCiAgICAgICAgICAgICAgICAgICAgbG9jYWwgcGxheWVyRGF0YSA9IHt9IC0tIOeOqeWutueahOaVsOaNruihqA0KICAgICAgICAgICAgICAgICAgICBwbGF5ZXJEYXRhLnR5cGUgPSAxIC0tIOi1i+WAvOeOqeWutuaVsOaNrueahOexu+Weiw0KCQkJCQlsb2NhbCBwbGFyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZCh2YWx1ZVBsYXllcikNCiAgICAgICAgICAgICAgICAgICAgcGxheWVyRGF0YS5uYW1lID0gcGxhci5OaWNrTmFtZSAtLSDotYvlgLznjqnlrrbmlbDmja7nmoTmmLXnp7ANCgkJCQkJcGxheWVyRGF0YS5pY29uID0gcGxhci5JY29uIC0tIOi1i+WAvOeOqeWutuaVsOaNrueahEljb24NCiAgICAgICAgICAgICAgICAgICAgcGxheWVyRGF0YS5pZCA9IHZhbHVlUGxheWVyIC0tIOi1i+WAvOeOqeWutuaVsOaNrueahOeOqeWutmlkDQogICAgICAgICAgICAgICAgICAgIHBsYXllckRhdGEucmVzMSA9IDAgLS0g6LWL5YC85Y+C5pWwMQ0KICAgICAgICAgICAgICAgICAgICBwbGF5ZXJEYXRhLnJlczIgPSAwIC0tIOi1i+WAvOWPguaVsDINCiAgICAgICAgICAgICAgICAgICAgcGxheWVyRGF0YS5yZXMzID0gMCAtLSDotYvlgLzlj4LmlbAzDQogICAgICAgICAgICAgICAgICAgIHBsYXllckRhdGEucmFuayA9IGtleVBsYXllciAtLSDotYvlgLznjqnlrrbmlbDmja7nmoTmjpLooYwNCiAgICAgICAgICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGludGVncmFsUGxhdGVMaXN0LCBwbGF5ZXJEYXRhKSAtLSDlsIbnjqnlrrbmlbDmja7mj5LlhaXnp6/liIbmppzliJfooajkuK0NCiAgICAgICAgICAgICAgICBlbmQNCiAgICAgICAgICAgIGVuZA0KICAgICAgICBlbmQNCiAgICAtLeaMieeFp+S4quS6ug0KICAgIGVsc2UgICAgICAgDQogICAgICAgIGZvciBrLHYgaW4gcGFpcnMoUGxheWVyczpHZXRBbGxQbGF5ZXIoKSkgZG8gLS0g6YGN5Y6G5omA5pyJ55qE546p5a62DQogICAgICAgICAgICBsb2NhbCBwbGF5ZXJEYXRhID0ge30gLS0g5paw5bu6546p5a625pWw5o2u6KGoDQogICAgICAgICAgICBwbGF5ZXJEYXRhLnR5cGUgPSAxIC0t546p5a62DQogICAgICAgICAgICBwbGF5ZXJEYXRhLm5hbWUgPSB2Lk5pY2tOYW1lIC0tIOi1i+WAvOeOqeWutueahOaYteensA0KCQkJcGxheWVyRGF0YS5pY29uID0gdi5JY29uIC0tIOi1i+WAvOeOqeWutueahEljb24NCiAgICAgICAgICAgIHBsYXllckRhdGEuaWQgPSB2LlBsYXllcklkIC0tIOi1i+WAvOeOqeWutueahGlkDQogICAgICAgICAgICBwbGF5ZXJEYXRhLnJlczEgPSAwIC0tIOi1i+WAvOWPguaVsDENCiAgICAgICAgICAgIHBsYXllckRhdGEucmVzMiA9IDAgLS0g6LWL5YC85Y+C5pWwMg0KICAgICAgICAgICAgcGxheWVyRGF0YS5yZXMzID0gMCAtLSDotYvlgLzlj4LmlbAzDQogICAgICAgICAgICBwbGF5ZXJEYXRhLnJhbmsgPSBrIC0tIOi1i+WAvOeOqeWutueahOaVsOaNruaOkuihjA0KICAgICAgICAgICAgdGFibGUuaW5zZXJ0KGludGVncmFsUGxhdGVMaXN0LCBwbGF5ZXJEYXRhKSAtLSDlsIbnjqnlrrbnmoTmlbDmja7ooajmj5LlhaXnp6/liIbmppzliJfooajkuK0NCiAgICAgICAgZW5kDQogICAgZW5kDQogICAgTWVzc2FnZUV2ZW50OkZpcmVDbGllbnQoblBsYXllcklkLCAiU0NfSW50ZWdyYWxQbGF0ZUxpc3QiLCBpbnRlZ3JhbFBsYXRlTGlzdCkgLS0g6LCD55So5a6i5oi356uv55qE56ev5YiG5qac5o6S6KGM5pa55rOVDQplbmQNCkludGVncmFsUGxhdGVTeXN0ZW0uaW5pdCgp
8a94638497b8fe81c3deebc8ee122077|LS3mk43kvZzmjqfliLbnsbvvvIzkuLvopoHlpITnkIbnm7jlhbPmk43kvZzlr7nkurrnianov5vooYzkv67mlLkNCmxvY2FsIHBsYXllciA9IFBsYXllcnM6R2V0TG9jYWxQbGF5ZXIoKQ0KbG9jYWwgYXZhdGFyID0gbmlsDQpsb2NhbCBXYWl0Rm9yQ2hpbGRUaW1lT3V0ID0gNQ0KbG9jYWwganVtcFBhbmVsID0gbmlsDQpsb2NhbCBqdW1wQnRuID0gbmlsDQoNCmxvY2FsIEhhbmRsZUNvbnRyb2wgPSB7fQ0KSGFuZGxlQ29udHJvbC5JbnB1dCA9IFZlY3RvcjMuemVybw0KDQotLeeUqOadpeWkhOeQhuaMieS9j+i3s+i3g+aMiemSrui/nue7rei3s+i3gw0KSGFuZGxlQ29udHJvbC5KdW1wRW5hYmxlID0gZmFsc2UgIA0KDQpmdW5jdGlvbiBIYW5kbGVDb250cm9sLlByb2Nlc3NKdW1wKCkNCiAgICBpZiBwbGF5ZXIgPT0gbmlsIG9yIGF2YXRhciA9PSBuaWwgdGhlbg0KICAgICAgICByZXR1cm4NCiAgICBlbmQgDQogICAgYXZhdGFyOkp1bXAoKQ0KZW5kDQoNCmZ1bmN0aW9uIEhhbmRsZUNvbnRyb2wuTWFpbigpDQogICAgLS3lpITnkIbmjInkuIvmjInpkq7ov57nu63ot7Pot4MNCglqdW1wUGFuZWwgPSBHYW1lVUk6V2FpdEZvckNoaWxkKCJMZWFwIixXYWl0Rm9yQ2hpbGRUaW1lT3V0KQ0KLS0JaWYganVtcFBhbmVsIHRoZW4NCi0tCQlKdW1wQnRuID0ganVtcFBhbmVsOldhaXRGb3JDaGlsZCgiTGVhcCIsV2FpdEZvckNoaWxkVGltZU91dCkNCi0tCQlKdW1wQnRuLk9uUG9pbnRlckRvd246Q29ubmVjdChIYW5kbGVDb250cm9sLk9uSnVtcFBvaW50ZXJEb3duKQ0KLS0JCUp1bXBCdG4uT25Qb2ludGVyRXhpdDpDb25uZWN0KEhhbmRsZUNvbnRyb2wuT25KdW1wUG9pbnRlckV4aXQpDQotLQkJSnVtcEJ0bi5PblBvaW50ZXJVcDpDb25uZWN0KEhhbmRsZUNvbnRyb2wuT25KdW1wUG9pbnRlckV4aXQpDQotLQllbmQNCglNZXNzYWdlRXZlbnQuQ2xpZW50RXZlbnRDYWxsQmFjaygiQ2hhcmFjdGVyX01vdmUiKTpDb25uZWN0KEhhbmRsZUNvbnRyb2wuTW92ZUNhbGxCYWNrKQ0KICAgIE1lc3NhZ2VFdmVudC5DbGllbnRFdmVudENhbGxCYWNrKCJDaGFyYWN0ZXJfSnVtcCIpOkNvbm5lY3QoSGFuZGxlQ29udHJvbC5Qcm9jZXNzSnVtcCkNCmVuZA0KZnVuY3Rpb24gSGFuZGxlQ29udHJvbC5Nb3ZlQ2FsbEJhY2soaW5wdXQpDQogICAgSGFuZGxlQ29udHJvbC5QbGF5ZXJNb3ZlKGlucHV0KTsNCmVuZA0KZnVuY3Rpb24gSGFuZGxlQ29udHJvbC5QbGF5ZXJNb3ZlKGlucHV0KQ0KCUhhbmRsZUNvbnRyb2wuSW5wdXQgPSBpbnB1dA0KZW5kDQoNCmZ1bmN0aW9uIEhhbmRsZUNvbnRyb2wuT25KdW1wUG9pbnRlckRvd24oKQ0KICAgIEhhbmRsZUNvbnRyb2wuSnVtcEVuYWJsZSA9IHRydWUNCmVuZA0KDQpmdW5jdGlvbiBIYW5kbGVDb250cm9sLk9uSnVtcFBvaW50ZXJFeGl0KCkNCiAgICBIYW5kbGVDb250cm9sLkp1bXBFbmFibGUgPSBmYWxzZQ0KZW5kDQoNCkdhbWVSdW4uVXBkYXRlOkNvbm5lY3QoZnVuY3Rpb24oKQ0KCWlmIEhhbmRsZUNvbnRyb2wuSnVtcEVuYWJsZSB0aGVuDQoJCWlmIGp1bXBCdG4gdGhlbg0KCQkJaWYgbm90IGp1bXBCdG4uSXNWaXNpYmxlIHRoZW4NCgkJCQlIYW5kbGVDb250cm9sLkp1bXBFbmFibGUgPSBmYWxzZQ0KCQkJZW5kDQoJCWVuZA0KICAgICAgICBIYW5kbGVDb250cm9sLlByb2Nlc3NKdW1wKCkNCgllbmQNCmVuZCkNCg0KaWYgcGxheWVyIH49IG5pbCB0aGVuDQoJaWYgcGxheWVyLkF2YXRhciB+PSBuaWwgdGhlbg0KCQlhdmF0YXIgPSBwbGF5ZXIuQXZhdGFyDQoJZW5kDQoJcGxheWVyLkF2YXRhckFkZGVkOkNvbm5lY3QoZnVuY3Rpb24ob2JqKQkNCgkJYXZhdGFyID0gb2JqDQoJZW5kKQ0KZW5kDQoNCkdhbWVSdW4uVXBkYXRlOkNvbm5lY3QoZnVuY3Rpb24oKSANCglpZiBXb3JrU3BhY2UuQ3VyQ2FtZXJhID09IG5pbCBvciBwbGF5ZXIgPT0gbmlsIG9yIG5vdCBwbGF5ZXI6QXZhaWxhYmxlKCkgb3IgYXZhdGFyID09IG5pbCBvciBub3QgYXZhdGFyOkF2YWlsYWJsZSgpIHRoZW4NCiAgICAgICAgcmV0dXJuDQogICAgZW5kDQogICAgbG9jYWwgYmxuQXV0b1R1cm4gPSBmYWxzZQ0KICAgIGlmIHBsYXllci5Db250cm9sVHlwZSA9PSBIYW5kbGVNb2RlLlRoZUZpcnN0UGVyc29uIHRoZW4NCiAgICAgICAgYmxuQXV0b1R1cm4gPSAgZmFsc2UNCiAgICBlbHNlDQogICAgICAgIGlmIFdvcmtTcGFjZS5DdXJDYW1lcmEuRGlzdGFuY2UgPD0gMC4yMDAxICB0aGVuDQogICAgICAgICAgICBibG5BdXRvVHVybiA9IGZhbHNlDQogICAgICAgIGVsc2UNCiAgICAgICAgICAgIGJsbkF1dG9UdXJuID0gdHJ1ZQ0KICAgICAgICBlbmQNCiAgICBlbmQNCglsb2NhbCBEaXIgPSBRdWF0ZXJuaW9uLkV1bGVyKFdvcmtTcGFjZS5DdXJDYW1lcmEuUm90YXRpb24ueCwgV29ya1NwYWNlLkN1ckNhbWVyYS5Sb3RhdGlvbi55LCBXb3JrU3BhY2UuQ3VyQ2FtZXJhLlJvdGF0aW9uLnopICAqIEhhbmRsZUNvbnRyb2wuSW5wdXQ7DQoJaWYgcGxheWVyLkF2YXRhcjpHZXRTdGF0ZSgpID09IEVudW0uQXZhdGFyQWN0aW9uU3RhdHVzLlNlYXQgdGhlbg0KCQlwbGF5ZXIuQXZhdGFyOk1vdmUoVmVjdG9yMihIYW5kbGVDb250cm9sLklucHV0LngsIEhhbmRsZUNvbnRyb2wuSW5wdXQueiksIGJsbkF1dG9UdXJuLCBWZWN0b3IyKEhhbmRsZUNvbnRyb2wuSW5wdXQueCwgSGFuZGxlQ29udHJvbC5JbnB1dC56KSk7DQoJZWxzZQ0KCQlwbGF5ZXIuQXZhdGFyOk1vdmUoVmVjdG9yMihEaXIueCwgRGlyLnopOk5vcm1hbGl6ZSgpLCBibG5BdXRvVHVybiwgVmVjdG9yMihIYW5kbGVDb250cm9sLklucHV0LngsIEhhbmRsZUNvbnRyb2wuSW5wdXQueikpOw0KCWVuZAkNCmVuZCkNCg0KSGFuZGxlQ29udHJvbC5NYWluKCkNCg0K
21a20c31f690e39eb1eca449ecc56eb0|
3a23b74956777765cd119b57ba852a70|bG9jYWwgU2VsZWN0VGVhbU1vZGVsID0ge30NClNlbGVjdFRlYW1Nb2RlbC5UZWFtcyA9IHt9DQpmdW5jdGlvbiBTZWxlY3RUZWFtTW9kZWwuU2hvd1NlbGVjdFRlYW1VSShUZWFtcykNCglUZWFtcyA9IFRlYW06R2V0VGVhbXMoKQ0KICAgIFNlbGVjdFRlYW1Nb2RlbC5UZWFtcyA9IFRlYW1zDQoJDQoJd2hpbGUgR2FtZVVJID09IG5pbCBkbw0KCQl3YWl0KDAuMSkNCgllbmQNCg0KCWlmIEdhbWVVSSB0aGVuDQoJCWxvY2FsIG1haW5VaSA9IEdhbWVVSTpXYWl0Rm9yQ2hpbGQoIkNob29zZSBhIHRlYW0iKQ0KCQlsb2NhbCB2aWV3Q29udGVudCA9IG1haW5VaTpXYWl0Rm9yQ2hpbGQoIlNjcm9sbCIpOldhaXRGb3JDaGlsZCgiU2Nycm9sbFZpZXciKTpXYWl0Rm9yQ2hpbGQoIlNjcm9sbExheWVyIENvbnRlbnQiKQ0KCQlsb2NhbCBzZWxlY3RJdGVtID0gdmlld0NvbnRlbnQ6V2FpdEZvckNoaWxkKCJUZWFtIE9wdGlvbnMiKQ0KCQltYWluVWkuSXNWaXNhYmxlID0gdHJ1ZQ0KCQlmb3Igayx2IGluIHBhaXJzKFRlYW1zKSBkbw0KCQkJbG9jYWwgY2xvbmVJdGVtID0gc2VsZWN0SXRlbTpDbG9uZSh2aWV3Q29udGVudCkNCgkJCWNsb25lSXRlbS5OYW1lID0gdi5OYW1lDQoJCQljbG9uZUl0ZW0uSXNWaXNhYmxlID0gdHJ1ZQ0KCQkJY2xvbmVJdGVtLlNob3dOYW1lLlRleHQgPSB2Lk5hbWUNCgkJCWNsb25lSXRlbS5TaG93TmFtZS5UZXh0Q29sb3IgPSB2LlRlYW1Db2xvcg0KCQkJY2xvbmVJdGVtLk9uQ2xpY2s6Q29ubmVjdChTZWxlY3RUZWFtTW9kZWwuT25DbGlja1RlYW0pDQoJCWVuZA0KCWVuZA0KZW5kDQoNCmZ1bmN0aW9uIFNlbGVjdFRlYW1Nb2RlbC5PbkNsaWNrVGVhbShlKQ0KCVNlbGVjdFRlYW1Nb2RlbC5UZWFtcyA9IFRlYW06R2V0VGVhbXMoKQ0KICAgIGZvciBrLCB2IGluIHBhaXJzKFNlbGVjdFRlYW1Nb2RlbC5UZWFtcykgZG8NCiAgICAgICAgaWYgdi5OYW1lID09IGUuU2hvd05hbWUuVGV4dCB0aGVuDQogICAgICAgICAgICBNZXNzYWdlRXZlbnQ6RmlyZVNlcnZlcigiQ2xpZW50U2VsZWN0VGVhbSIsIHYuVGVhbUlkKQ0KCQkJYnJlYWsNCiAgICAgICAgZW5kDQogICAgZW5kDQoJaWYgR2FtZVVJWyJDaG9vc2UgYSB0ZWFtIl0gdGhlbg0KCQlHYW1lVUlbIkNob29zZSBhIHRlYW0iXS5Jc1Zpc2FibGUgPSBmYWxzZQ0KCWVuZA0KZW5kDQoNCmZ1bmN0aW9uIFNlbGVjdFRlYW1Nb2RlbC5QbGF5ZXJFbnRlcihUZWFtcykNCglsb2NhbCBjb3VudCA9IHRhYmxlLm51bXMoVGVhbXMpDQogICAgaWYgY291bnQgPiAwIHRoZW4NCiAgICAgICAgU2VsZWN0VGVhbU1vZGVsLlNob3dTZWxlY3RUZWFtVUkoVGVhbXMpDQogICAgZW5kDQplbmQNCg0KZnVuY3Rpb24gU2VsZWN0VGVhbU1vZGVsLlN0YXJ0KCkNCiAgICBNZXNzYWdlRXZlbnQuQ2xpZW50RXZlbnRDYWxsQmFjaygiUGxheWVyRW50ZXIiKTpDb25uZWN0KFNlbGVjdFRlYW1Nb2RlbC5QbGF5ZXJFbnRlcikNCg0KCWxvY2FsIGNob29zaW5nVUkgPSBzY3JpcHQ6V2FpdEZvckNoaWxkKCJDaG9vc2UgYSB0ZWFtIikNCgl3aGlsZSBHYW1lVUkgPT0gbmlsIGRvDQoJCXdhaXQoMC4xKQ0KCWVuZA0KDQoJY2hvb3NpbmdVSS5QYXJlbnQgPSBHYW1lVUkNCgkNCglHYW1lVUk6V2FpdEZvckNoaWxkKCJDaG9vc2UgYSB0ZWFtIik6V2FpdEZvckNoaWxkKCJUaXRsZVBhbmVsIik6V2FpdEZvckNoaWxkKCJVaUJ1dHRvbiIpLk9uQ2xpY2s6Q29ubmVjdChmdW5jdGlvbigpDQoJCWlmIEdhbWVVSVsiQ2hvb3NlIGEgdGVhbSJdIHRoZW4NCgkJCUdhbWVVSVsiQ2hvb3NlIGEgdGVhbSJdLklzVmlzYWJsZSA9IGZhbHNlDQoJCWVuZA0KCWVuZCkNCmVuZA0KDQpTZWxlY3RUZWFtTW9kZWwuU3RhcnQoKQ0KDQo=
2379dada936a0ec2c4424905514c13e7|bG9jYWwgU2VsZWN0VGVhbU1vZGVsID0ge30NCg0KZnVuY3Rpb24gU2VsZWN0VGVhbU1vZGVsLnBsYXllckFkZChVaWQpDQogICAgbG9jYWwgcGxheWVyID0gUGxheWVyczpHZXRQbGF5ZXJCeVVzZXJJZChVaWQpDQogICAgbG9jYWwgdGVhbXMgPSBUZWFtOkdldFRlYW1zKCkNCiAgICBsb2NhbCBzZW5kRGF0YSA9IHt9DQogICAgZm9yIGssIHYgaW4gcGFpcnModGVhbXMpIGRvDQogICAgICAgIGxvY2FsIGRhdGEgPSB7fQ0KICAgICAgICBkYXRhLlRlYW1JZCA9IHYuVGVhbUlkDQogICAgICAgIGRhdGEuVGVhbU5hbWUgPSB2LlRlYW1OYW1lDQogICAgICAgIGRhdGEuVGVhbUNvbG9yID0gdi5UZWFtQ29sb3INCiAgICAgICAgdGFibGUuaW5zZXJ0KHNlbmREYXRhLCBkYXRhKQ0KICAgIGVuZA0KCU1lc3NhZ2VFdmVudC5GaXJlQ2xpZW50KFVpZCwgIlBsYXllckVudGVyIiwgc2VuZERhdGEpDQplbmQNCg0KZnVuY3Rpb24gU2VsZWN0VGVhbU1vZGVsLkNsaWVudFNlbGVjdFRlYW1DYWxsQmFjayhVaWQsIFRlYW1JZCkNCglsb2NhbCBwbGF5ZXIgPSBQbGF5ZXJzOkdldFBsYXllckJ5VXNlcklkKFVpZCkNCglsb2NhbCB0ZWFtID0gVGVhbTpHZXRUZWFtRm9ySWQoVGVhbUlkKQ0KCWxvY2FsIG1heE51bSA9IHRlYW0uVGVhbU1heE51bWJlcg0KCWxvY2FsIE51bSA9IHRlYW0uUGxheWVyTnVtDQoJaWYgTnVtIDwgbWF4TnVtIHRoZW4NCgkJdGVhbTpBZGRQbGF5ZXIoVWlkKQ0KCWVsc2UNCgkJZm9yIGssIHYgaW4gcGFpcnMoVGVhbTpHZXRUZWFtcygpKSBkbw0KCQkJdGVhbSA9IHYNCgkJCW1heE51bSA9IHRlYW0uVGVhbU1heE51bWJlcg0KCQkJTnVtID0gdGVhbS5QbGF5ZXJOdW0NCgkJCWlmIE51bSA8IG1heE51bSB0aGVuDQoJCQkJdGVhbTpBZGRQbGF5ZXIoVWlkKQ0KCQkJCWJyZWFrDQoJCQllbmQNCgkJZW5kDQoJZW5kDQplbmQNCg0KUGxheWVycy5QbGF5ZXJBZGRlZDpDb25uZWN0KFNlbGVjdFRlYW1Nb2RlbC5wbGF5ZXJBZGQpDQpNZXNzYWdlRXZlbnQuU2VydmVyRXZlbnRDYWxsQmFjaygiQ2xpZW50U2VsZWN0VGVhbSIpOkNvbm5lY3QoU2VsZWN0VGVhbU1vZGVsLkNsaWVudFNlbGVjdFRlYW1DYWxsQmFjaykNCg0K
59635df4d04f93d836bf922cca8ac6e4|
aff2cae748b157df57723fe0b62e1ac2|
